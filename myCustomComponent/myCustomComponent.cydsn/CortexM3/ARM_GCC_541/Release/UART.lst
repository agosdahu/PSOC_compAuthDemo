ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 074B     		ldr	r3, .L2
  35 0002 7222     		movs	r2, #114
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 2022     		movs	r2, #32
  39 0008 83F80121 		strb	r2, [r3, #257]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 4


 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  40              		.loc 1 138 0
  41 000c 5B3B     		subs	r3, r3, #91
  42 000e 0622     		movs	r2, #6
  43 0010 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  44              		.loc 1 139 0
  45 0012 4722     		movs	r2, #71
  46 0014 1A74     		strb	r2, [r3, #16]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  47              		.loc 1 150 0
  48 0016 0022     		movs	r2, #0
  49 0018 83F85C20 		strb	r2, [r3, #92]
  50 001c 7047     		bx	lr
  51              	.L3:
  52 001e 00BF     		.align	2
  53              	.L2:
  54 0020 87640040 		.word	1073767559
  55              		.cfi_endproc
  56              	.LFE1:
  57              		.size	UART_Init, .-UART_Init
  58              		.section	.text.UART_Enable,"ax",%progbits
  59              		.align	1
  60              		.global	UART_Enable
  61              		.thumb
  62              		.thumb_func
  63              		.type	UART_Enable, %function
  64              	UART_Enable:
  65              	.LFB2:
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 5


 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  66              		.loc 1 184 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  74              		.loc 1 186 0
  75 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  76              	.LVL0:
  77 0006 0446     		mov	r4, r0
  78              	.LVL1:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  79              		.loc 1 190 0
  80 0008 0B4A     		ldr	r2, .L5
  81 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 6


 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  82              		.loc 1 211 0
  83 000c 0132     		adds	r2, r2, #1
 190:Generated_Source\PSoC5/UART.c **** 
  84              		.loc 1 190 0
  85 000e 43F02003 		orr	r3, r3, #32
  86 0012 02F8013C 		strb	r3, [r2, #-1]
 193:Generated_Source\PSoC5/UART.c **** 
  87              		.loc 1 193 0
  88 0016 92F80031 		ldrb	r3, [r2, #256]	@ zero_extendqisi2
  89 001a 43F01003 		orr	r3, r3, #16
  90 001e 82F80031 		strb	r3, [r2, #256]
  91              		.loc 1 211 0
  92 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  93 0024 43F01003 		orr	r3, r3, #16
  94 0028 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  95              		.loc 1 219 0
  96 002a FFF7FEFF 		bl	UART_IntClock_Start
  97              	.LVL2:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  98              		.loc 1 222 0
  99 002e 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART.c **** }
 100              		.loc 1 223 0
 101 0030 BDE81040 		pop	{r4, lr}
 102              		.cfi_restore 14
 103              		.cfi_restore 4
 104              		.cfi_def_cfa_offset 0
 105              	.LVL3:
 222:Generated_Source\PSoC5/UART.c **** }
 106              		.loc 1 222 0
 107 0034 FFF7FEBF 		b	CyExitCriticalSection
 108              	.LVL4:
 109              	.L6:
 110              		.align	2
 111              	.L5:
 112 0038 97640040 		.word	1073767575
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	UART_Enable, .-UART_Enable
 116              		.section	.text.UART_Start,"ax",%progbits
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 7


 117              		.align	1
 118              		.global	UART_Start
 119              		.thumb
 120              		.thumb_func
 121              		.type	UART_Start, %function
 122              	UART_Start:
 123              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 124              		.loc 1 77 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 132              		.loc 1 79 0
 133 0002 0549     		ldr	r1, .L10
 134 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 135 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 136              		.loc 1 81 0
 137 0008 FFF7FEFF 		bl	UART_Init
 138              	.LVL5:
  82:Generated_Source\PSoC5/UART.c ****     }
 139              		.loc 1 82 0
 140 000c 0123     		movs	r3, #1
 141 000e 0B70     		strb	r3, [r1]
 142              	.L8:
  86:Generated_Source\PSoC5/UART.c **** 
 143              		.loc 1 86 0
 144 0010 BDE80840 		pop	{r3, lr}
 145              		.cfi_restore 14
 146              		.cfi_restore 3
 147              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART.c **** }
 148              		.loc 1 85 0
 149 0014 FFF7FEBF 		b	UART_Enable
 150              	.LVL6:
 151              	.L11:
 152              		.align	2
 153              	.L10:
 154 0018 00000000 		.word	.LANCHOR0
 155              		.cfi_endproc
 156              	.LFE0:
 157              		.size	UART_Start, .-UART_Start
 158              		.section	.text.UART_Stop,"ax",%progbits
 159              		.align	1
 160              		.global	UART_Stop
 161              		.thumb
 162              		.thumb_func
 163              		.type	UART_Stop, %function
 164              	UART_Stop:
 165              	.LFB3:
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 8


 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 166              		.loc 1 241 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 10B5     		push	{r4, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 174              		.loc 1 243 0
 175 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 176              	.LVL7:
 177 0006 0446     		mov	r4, r0
 178              	.LVL8:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 179              		.loc 1 247 0
 180 0008 0B4A     		ldr	r2, .L13
 181 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 182 000c 03F0DF03 		and	r3, r3, #223
 183 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 184              		.loc 1 257 0
 185 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 186              	.LVL9:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 9


 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 187              		.loc 1 262 0
 188 0016 094A     		ldr	r2, .L13+4
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 189              		.loc 1 277 0
 190 0018 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART.c **** 
 191              		.loc 1 262 0
 192 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 270:Generated_Source\PSoC5/UART.c **** 
 193              		.loc 1 270 0
 194 001c A2F58072 		sub	r2, r2, #256
 262:Generated_Source\PSoC5/UART.c **** 
 195              		.loc 1 262 0
 196 0020 03F0EF03 		and	r3, r3, #239
 197 0024 82F80031 		strb	r3, [r2, #256]
 270:Generated_Source\PSoC5/UART.c **** 
 198              		.loc 1 270 0
 199 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 200 002a 03F0EF03 		and	r3, r3, #239
 201 002e 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/UART.c **** }
 202              		.loc 1 278 0
 203 0030 BDE81040 		pop	{r4, lr}
 204              		.cfi_restore 14
 205              		.cfi_restore 4
 206              		.cfi_def_cfa_offset 0
 207              	.LVL10:
 277:Generated_Source\PSoC5/UART.c **** }
 208              		.loc 1 277 0
 209 0034 FFF7FEBF 		b	CyExitCriticalSection
 210              	.LVL11:
 211              	.L14:
 212              		.align	2
 213              	.L13:
 214 0038 97640040 		.word	1073767575
 215 003c 98650040 		.word	1073767832
 216              		.cfi_endproc
 217              	.LFE3:
 218              		.size	UART_Stop, .-UART_Stop
 219              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 220              		.align	1
 221              		.global	UART_ReadControlRegister
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 10


 222              		.thumb
 223              		.thumb_func
 224              		.type	UART_ReadControlRegister, %function
 225              	UART_ReadControlRegister:
 226              	.LFB4:
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 227              		.loc 1 296 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 232              		.loc 1 302 0
 233 0000 0020     		movs	r0, #0
 234 0002 7047     		bx	lr
 235              		.cfi_endproc
 236              	.LFE4:
 237              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 238              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 239              		.align	1
 240              		.global	UART_WriteControlRegister
 241              		.thumb
 242              		.thumb_func
 243              		.type	UART_WriteControlRegister, %function
 244              	UART_WriteControlRegister:
 245              	.LFB30:
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE30:
 253              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 254              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 11


 255              		.align	1
 256              		.global	UART_SetRxInterruptMode
 257              		.thumb
 258              		.thumb_func
 259              		.type	UART_SetRxInterruptMode, %function
 260              	UART_SetRxInterruptMode:
 261              	.LFB6:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 12


 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 262              		.loc 1 360 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              	.LVL12:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 268              		.loc 1 361 0
 269 0000 014B     		ldr	r3, .L18
 270 0002 1870     		strb	r0, [r3]
 271 0004 7047     		bx	lr
 272              	.L19:
 273 0006 00BF     		.align	2
 274              	.L18:
 275 0008 88650040 		.word	1073767816
 276              		.cfi_endproc
 277              	.LFE6:
 278              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 279              		.section	.text.UART_ReadRxData,"ax",%progbits
 280              		.align	1
 281              		.global	UART_ReadRxData
 282              		.thumb
 283              		.thumb_func
 284              		.type	UART_ReadRxData, %function
 285              	UART_ReadRxData:
 286              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 13


 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 287              		.loc 1 393 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 14


 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 292              		.loc 1 448 0
 293 0000 014B     		ldr	r3, .L21
 294 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 295              	.LVL13:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 296              		.loc 1 453 0
 297 0004 7047     		bx	lr
 298              	.L22:
 299 0006 00BF     		.align	2
 300              	.L21:
 301 0008 4B650040 		.word	1073767755
 302              		.cfi_endproc
 303              	.LFE7:
 304              		.size	UART_ReadRxData, .-UART_ReadRxData
 305              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 306              		.align	1
 307              		.global	UART_ReadRxStatus
 308              		.thumb
 309              		.thumb_func
 310              		.type	UART_ReadRxStatus, %function
 311              	UART_ReadRxStatus:
 312              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 15


 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 313              		.loc 1 486 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 318              		.loc 1 489 0
 319 0000 024B     		ldr	r3, .L24
 320 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 321              	.LVL14:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 322              		.loc 1 500 0
 323 0004 00F07F00 		and	r0, r0, #127
 324              	.LVL15:
 325 0008 7047     		bx	lr
 326              	.L25:
 327 000a 00BF     		.align	2
 328              	.L24:
 329 000c 68650040 		.word	1073767784
 330              		.cfi_endproc
 331              	.LFE8:
 332              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 333              		.section	.text.UART_GetChar,"ax",%progbits
 334              		.align	1
 335              		.global	UART_GetChar
 336              		.thumb
 337              		.thumb_func
 338              		.type	UART_GetChar, %function
 339              	UART_GetChar:
 340              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 16


 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 341              		.loc 1 533 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL16:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 17


 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 347              		.loc 1 596 0
 348 0000 074B     		ldr	r3, .L30
 349 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 350 0004 DBB2     		uxtb	r3, r3
 351              	.LVL17:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 352              		.loc 1 597 0
 353 0006 03F02002 		and	r2, r3, #32
 354 000a 02F0FF00 		and	r0, r2, #255
 355 000e 2AB1     		cbz	r2, .L27
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 18


 356              		.loc 1 600 0
 357 0010 044A     		ldr	r2, .L30+4
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 358              		.loc 1 603 0
 359 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/UART.c **** 
 360              		.loc 1 600 0
 361 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 362              	.LVL18:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 363              		.loc 1 606 0
 364 0018 18BF     		it	ne
 365 001a 0020     		movne	r0, #0
 366              	.LVL19:
 367              	.L27:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 368              		.loc 1 612 0
 369 001c 7047     		bx	lr
 370              	.L31:
 371 001e 00BF     		.align	2
 372              	.L30:
 373 0020 68650040 		.word	1073767784
 374 0024 4B650040 		.word	1073767755
 375              		.cfi_endproc
 376              	.LFE9:
 377              		.size	UART_GetChar, .-UART_GetChar
 378              		.section	.text.UART_GetByte,"ax",%progbits
 379              		.align	1
 380              		.global	UART_GetByte
 381              		.thumb
 382              		.thumb_func
 383              		.type	UART_GetByte, %function
 384              	UART_GetByte:
 385              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 19


 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 386              		.loc 1 635 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.LBB6:
 392              	.LBB7:
 489:Generated_Source\PSoC5/UART.c **** 
 393              		.loc 1 489 0
 394 0000 044B     		ldr	r3, .L33
 395              	.LBE7:
 396              	.LBE6:
 397              	.LBB9:
 398              	.LBB10:
 448:Generated_Source\PSoC5/UART.c **** 
 399              		.loc 1 448 0
 400 0002 054A     		ldr	r2, .L33+4
 401              	.LBE10:
 402              	.LBE9:
 403              	.LBB12:
 404              	.LBB8:
 489:Generated_Source\PSoC5/UART.c **** 
 405              		.loc 1 489 0
 406 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407              	.LBE8:
 408              	.LBE12:
 409              	.LBB13:
 410              	.LBB11:
 448:Generated_Source\PSoC5/UART.c **** 
 411              		.loc 1 448 0
 412 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 413              	.LBE11:
 414              	.LBE13:
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 415              		.loc 1 646 0
 416 0008 03F07F03 		and	r3, r3, #127
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 20


 649:Generated_Source\PSoC5/UART.c ****     }
 417              		.loc 1 649 0
 418 000c 40EA0320 		orr	r0, r0, r3, lsl #8
 419 0010 7047     		bx	lr
 420              	.L34:
 421 0012 00BF     		.align	2
 422              	.L33:
 423 0014 68650040 		.word	1073767784
 424 0018 4B650040 		.word	1073767755
 425              		.cfi_endproc
 426              	.LFE10:
 427              		.size	UART_GetByte, .-UART_GetByte
 428              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 429              		.align	1
 430              		.global	UART_GetRxBufferSize
 431              		.thumb
 432              		.thumb_func
 433              		.type	UART_GetRxBufferSize, %function
 434              	UART_GetRxBufferSize:
 435              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 436              		.loc 1 685 0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 21


 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 441              		.loc 1 718 0
 442 0000 024B     		ldr	r3, .L36
 443 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 444              	.LVL20:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 445              		.loc 1 723 0
 446 0004 C0F34010 		ubfx	r0, r0, #5, #1
 447              	.LVL21:
 448 0008 7047     		bx	lr
 449              	.L37:
 450 000a 00BF     		.align	2
 451              	.L36:
 452 000c 68650040 		.word	1073767784
 453              		.cfi_endproc
 454              	.LFE11:
 455              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 22


 456              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 457              		.align	1
 458              		.global	UART_ClearRxBuffer
 459              		.thumb
 460              		.thumb_func
 461              		.type	UART_ClearRxBuffer, %function
 462              	UART_ClearRxBuffer:
 463              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 464              		.loc 1 758 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 08B5     		push	{r3, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 472              		.loc 1 762 0
 473 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 23


 474              	.LVL22:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 475              		.loc 1 763 0
 476 0006 064B     		ldr	r3, .L39
 477 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 478 000a 42F00102 		orr	r2, r2, #1
 479 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 480              		.loc 1 764 0
 481 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 482 0012 02F0FE02 		and	r2, r2, #254
 483 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 484              		.loc 1 781 0
 485 0018 BDE80840 		pop	{r3, lr}
 486              		.cfi_restore 14
 487              		.cfi_restore 3
 488              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 489              		.loc 1 765 0
 490 001c FFF7FEBF 		b	CyExitCriticalSection
 491              	.LVL23:
 492              	.L40:
 493              		.align	2
 494              	.L39:
 495 0020 9B650040 		.word	1073767835
 496              		.cfi_endproc
 497              	.LFE12:
 498              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 499              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 500              		.align	1
 501              		.global	UART_SetRxAddressMode
 502              		.thumb
 503              		.thumb_func
 504              		.type	UART_SetRxAddressMode, %function
 505              	UART_SetRxAddressMode:
 506              	.LFB28:
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 24


 511 0000 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE28:
 514              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 515              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 516              		.align	1
 517              		.global	UART_SetRxAddress1
 518              		.thumb
 519              		.thumb_func
 520              		.type	UART_SetRxAddress1, %function
 521              	UART_SetRxAddress1:
 522              	.LFB14:
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 25


 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 523              		.loc 1 858 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528              	.LVL24:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 529              		.loc 1 859 0
 530 0000 014B     		ldr	r3, .L43
 531 0002 1870     		strb	r0, [r3]
 532 0004 7047     		bx	lr
 533              	.L44:
 534 0006 00BF     		.align	2
 535              	.L43:
 536 0008 2B650040 		.word	1073767723
 537              		.cfi_endproc
 538              	.LFE14:
 539              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 540              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 541              		.align	1
 542              		.global	UART_SetRxAddress2
 543              		.thumb
 544              		.thumb_func
 545              		.type	UART_SetRxAddress2, %function
 546              	UART_SetRxAddress2:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 26


 547              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 548              		.loc 1 878 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.LVL25:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 554              		.loc 1 879 0
 555 0000 014B     		ldr	r3, .L46
 556 0002 1870     		strb	r0, [r3]
 557 0004 7047     		bx	lr
 558              	.L47:
 559 0006 00BF     		.align	2
 560              	.L46:
 561 0008 3B650040 		.word	1073767739
 562              		.cfi_endproc
 563              	.LFE15:
 564              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 565              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 566              		.align	1
 567              		.global	UART_SetTxInterruptMode
 568              		.thumb
 569              		.thumb_func
 570              		.type	UART_SetTxInterruptMode, %function
 571              	UART_SetTxInterruptMode:
 572              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 27


 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 573              		.loc 1 909 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578              	.LVL26:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 579              		.loc 1 910 0
 580 0000 014B     		ldr	r3, .L49
 581 0002 1870     		strb	r0, [r3]
 582 0004 7047     		bx	lr
 583              	.L50:
 584 0006 00BF     		.align	2
 585              	.L49:
 586 0008 88640040 		.word	1073767560
 587              		.cfi_endproc
 588              	.LFE16:
 589              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 590              		.section	.text.UART_WriteTxData,"ax",%progbits
 591              		.align	1
 592              		.global	UART_WriteTxData
 593              		.thumb
 594              		.thumb_func
 595              		.type	UART_WriteTxData, %function
 596              	UART_WriteTxData:
 597              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 28


 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 598              		.loc 1 943 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603              	.LVL27:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 604              		.loc 1 945 0
 605 0000 024B     		ldr	r3, .L56
 606 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 607 0004 0BB1     		cbz	r3, .L51
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 29


 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 608              		.loc 1 976 0
 609 0006 024B     		ldr	r3, .L56+4
 610 0008 1870     		strb	r0, [r3]
 611              	.L51:
 612 000a 7047     		bx	lr
 613              	.L57:
 614              		.align	2
 615              	.L56:
 616 000c 00000000 		.word	.LANCHOR0
 617 0010 47640040 		.word	1073767495
 618              		.cfi_endproc
 619              	.LFE17:
 620              		.size	UART_WriteTxData, .-UART_WriteTxData
 621              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 622              		.align	1
 623              		.global	UART_ReadTxStatus
 624              		.thumb
 625              		.thumb_func
 626              		.type	UART_ReadTxStatus, %function
 627              	UART_ReadTxStatus:
 628              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 629              		.loc 1 1004 0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 30


 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 634              		.loc 1 1005 0
 635 0000 014B     		ldr	r3, .L59
 636 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 637              		.loc 1 1006 0
 638 0004 7047     		bx	lr
 639              	.L60:
 640 0006 00BF     		.align	2
 641              	.L59:
 642 0008 68640040 		.word	1073767528
 643              		.cfi_endproc
 644              	.LFE18:
 645              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 646              		.section	.text.UART_PutChar,"ax",%progbits
 647              		.align	1
 648              		.global	UART_PutChar
 649              		.thumb
 650              		.thumb_func
 651              		.type	UART_PutChar, %function
 652              	UART_PutChar:
 653              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 31


1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 654              		.loc 1 1042 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659              	.LVL28:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 32


1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 660              		.loc 1 1107 0
 661 0000 034A     		ldr	r2, .L64
 662              	.L62:
 663              		.loc 1 1107 0 is_stmt 0 discriminator 1
 664 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 665 0004 5B07     		lsls	r3, r3, #29
 666 0006 FCD4     		bmi	.L62
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 667              		.loc 1 1113 0 is_stmt 1
 668 0008 024B     		ldr	r3, .L64+4
 669 000a 1870     		strb	r0, [r3]
 670 000c 7047     		bx	lr
 671              	.L65:
 672 000e 00BF     		.align	2
 673              	.L64:
 674 0010 68640040 		.word	1073767528
 675 0014 47640040 		.word	1073767495
 676              		.cfi_endproc
 677              	.LFE19:
 678              		.size	UART_PutChar, .-UART_PutChar
 679              		.section	.text.UART_PutString,"ax",%progbits
 680              		.align	1
 681              		.global	UART_PutString
 682              		.thumb
 683              		.thumb_func
 684              		.type	UART_PutString, %function
 685              	UART_PutString:
 686              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 33


1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 687              		.loc 1 1146 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LVL29:
 692 0000 10B5     		push	{r4, lr}
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 4, -8
 695              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 696              		.loc 1 1150 0
 697 0002 064B     		ldr	r3, .L73
1146:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 698              		.loc 1 1146 0
 699 0004 0446     		mov	r4, r0
 700              		.loc 1 1150 0
 701 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 702 0008 3BB1     		cbz	r3, .L66
 703 000a 0021     		movs	r1, #0
 704              	.LVL30:
 705              	.L68:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 706              		.loc 1 1153 0
 707 000c 8BB2     		uxth	r3, r1
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 34


 708              	.LVL31:
 709 000e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 710 0010 0131     		adds	r1, r1, #1
 711 0012 10B1     		cbz	r0, .L66
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 712              		.loc 1 1155 0
 713 0014 FFF7FEFF 		bl	UART_PutChar
 714              	.LVL32:
 715 0018 F8E7     		b	.L68
 716              	.LVL33:
 717              	.L66:
 718 001a 10BD     		pop	{r4, pc}
 719              	.LVL34:
 720              	.L74:
 721              		.align	2
 722              	.L73:
 723 001c 00000000 		.word	.LANCHOR0
 724              		.cfi_endproc
 725              	.LFE20:
 726              		.size	UART_PutString, .-UART_PutString
 727              		.section	.text.UART_PutArray,"ax",%progbits
 728              		.align	1
 729              		.global	UART_PutArray
 730              		.thumb
 731              		.thumb_func
 732              		.type	UART_PutArray, %function
 733              	UART_PutArray:
 734              	.LFB21:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 35


1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 735              		.loc 1 1193 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              	.LVL35:
 740 0000 10B5     		push	{r4, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 744              		.loc 1 1197 0
 745 0002 074B     		ldr	r3, .L80
 746 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 0006 4BB1     		cbz	r3, .L75
 748 0008 0139     		subs	r1, r1, #1
 749              	.LVL36:
 750 000a 441E     		subs	r4, r0, #1
 751 000c 0144     		add	r1, r1, r0
 752              	.LVL37:
 753              	.L77:
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 754              		.loc 1 1199 0
 755 000e 8C42     		cmp	r4, r1
 756 0010 04D0     		beq	.L75
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 757              		.loc 1 1201 0
 758 0012 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 759              	.LVL38:
 760 0016 FFF7FEFF 		bl	UART_PutChar
 761              	.LVL39:
 762 001a F8E7     		b	.L77
 763              	.LVL40:
 764              	.L75:
 765 001c 10BD     		pop	{r4, pc}
 766              	.L81:
 767 001e 00BF     		.align	2
 768              	.L80:
 769 0020 00000000 		.word	.LANCHOR0
 770              		.cfi_endproc
 771              	.LFE21:
 772              		.size	UART_PutArray, .-UART_PutArray
 773              		.section	.text.UART_PutCRLF,"ax",%progbits
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 36


 774              		.align	1
 775              		.global	UART_PutCRLF
 776              		.thumb
 777              		.thumb_func
 778              		.type	UART_PutCRLF, %function
 779              	UART_PutCRLF:
 780              	.LFB22:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 781              		.loc 1 1231 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL41:
 786 0000 08B5     		push	{r3, lr}
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 3, -8
 789              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 790              		.loc 1 1233 0
 791 0002 074B     		ldr	r3, .L84
 792 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793 0006 4BB1     		cbz	r3, .L82
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 794              		.loc 1 1235 0
 795 0008 FFF7FEFF 		bl	UART_PutChar
 796              	.LVL42:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 37


1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 797              		.loc 1 1236 0
 798 000c 0D20     		movs	r0, #13
 799 000e FFF7FEFF 		bl	UART_PutChar
 800              	.LVL43:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
 801              		.loc 1 1239 0
 802 0012 BDE80840 		pop	{r3, lr}
 803              		.cfi_remember_state
 804              		.cfi_restore 14
 805              		.cfi_restore 3
 806              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 807              		.loc 1 1237 0
 808 0016 0A20     		movs	r0, #10
 809 0018 FFF7FEBF 		b	UART_PutChar
 810              	.LVL44:
 811              	.L82:
 812              		.cfi_restore_state
 813 001c 08BD     		pop	{r3, pc}
 814              	.L85:
 815 001e 00BF     		.align	2
 816              	.L84:
 817 0020 00000000 		.word	.LANCHOR0
 818              		.cfi_endproc
 819              	.LFE22:
 820              		.size	UART_PutCRLF, .-UART_PutCRLF
 821              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 822              		.align	1
 823              		.global	UART_GetTxBufferSize
 824              		.thumb
 825              		.thumb_func
 826              		.type	UART_GetTxBufferSize, %function
 827              	UART_GetTxBufferSize:
 828              	.LFB23:
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 38


1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 829              		.loc 1 1275 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 834              		.loc 1 1301 0
 835 0000 054B     		ldr	r3, .L89
 836 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 837 0004 C0B2     		uxtb	r0, r0
 838              	.LVL45:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 839              		.loc 1 1304 0
 840 0006 4307     		lsls	r3, r0, #29
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 39


1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 841              		.loc 1 1308 0
 842 0008 5ABF     		itte	pl
 843 000a 80F00200 		eorpl	r0, r0, #2
 844              	.LVL46:
 845 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:Generated_Source\PSoC5/UART.c ****         }
 846              		.loc 1 1306 0
 847 0012 0420     		movmi	r0, #4
 848              	.LVL47:
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 849              		.loc 1 1321 0
 850 0014 7047     		bx	lr
 851              	.L90:
 852 0016 00BF     		.align	2
 853              	.L89:
 854 0018 68640040 		.word	1073767528
 855              		.cfi_endproc
 856              	.LFE23:
 857              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 858              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 859              		.align	1
 860              		.global	UART_ClearTxBuffer
 861              		.thumb
 862              		.thumb_func
 863              		.type	UART_ClearTxBuffer, %function
 864              	UART_ClearTxBuffer:
 865              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 40


1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 866              		.loc 1 1355 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870 0000 08B5     		push	{r3, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 3, -8
 873              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 874              		.loc 1 1358 0
 875 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 876              	.LVL48:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 877              		.loc 1 1360 0
 878 0006 064B     		ldr	r3, .L92
 879 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 880 000a 42F00102 		orr	r2, r2, #1
 881 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 882              		.loc 1 1361 0
 883 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 884 0012 02F0FE02 		and	r2, r2, #254
 885 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 41


1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
 886              		.loc 1 1376 0
 887 0018 BDE80840 		pop	{r3, lr}
 888              		.cfi_restore 14
 889              		.cfi_restore 3
 890              		.cfi_def_cfa_offset 0
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 891              		.loc 1 1362 0
 892 001c FFF7FEBF 		b	CyExitCriticalSection
 893              	.LVL49:
 894              	.L93:
 895              		.align	2
 896              	.L92:
 897 0020 97640040 		.word	1073767575
 898              		.cfi_endproc
 899              	.LFE24:
 900              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 901              		.section	.text.UART_SendBreak,"ax",%progbits
 902              		.align	1
 903              		.global	UART_SendBreak
 904              		.thumb
 905              		.thumb_func
 906              		.type	UART_SendBreak, %function
 907              	UART_SendBreak:
 908              	.LFB25:
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 42


1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 909              		.loc 1 1441 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914              	.LVL50:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 915              		.loc 1 1444 0
 916 0000 124B     		ldr	r3, .L117
 917 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 918 0004 02B3     		cbz	r2, .L94
 919              	.LBB14:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 43


1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 920              		.loc 1 1490 0
 921 0006 08B1     		cbz	r0, .L97
 922              		.loc 1 1490 0 is_stmt 0 discriminator 1
 923 0008 0328     		cmp	r0, #3
 924 000a 1BD1     		bne	.L98
 925              	.L97:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 926              		.loc 1 1501 0 is_stmt 1
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 44


 927 000c 104A     		ldr	r2, .L117+4
 928 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 929 0010 5970     		strb	r1, [r3, #1]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 930              		.loc 1 1502 0
 931 0012 6721     		movs	r1, #103
 932 0014 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 933              		.loc 1 1509 0
 934 0016 0021     		movs	r1, #0
 935 0018 D172     		strb	r1, [r2, #11]
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 936              		.loc 1 1513 0
 937 001a 0E49     		ldr	r1, .L117+8
 938              	.L99:
 939              		.loc 1 1513 0 is_stmt 0 discriminator 1
 940 001c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 941              	.LVL51:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 942              		.loc 1 1515 0 is_stmt 1 discriminator 1
 943 001e 9207     		lsls	r2, r2, #30
 944              	.LVL52:
 945 0020 FCD4     		bmi	.L99
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 946              		.loc 1 1518 0
 947 0022 00F0FD02 		and	r2, r0, #253
 948 0026 012A     		cmp	r2, #1
 949              	.L116:
 950 0028 03D0     		beq	.L100
 951              	.L104:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 952              		.loc 1 1528 0
 953 002a 0138     		subs	r0, r0, #1
 954              	.LVL53:
 955 002c 0228     		cmp	r0, #2
 956 002e 05D9     		bls	.L101
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 45


 957 0030 7047     		bx	lr
 958              	.LVL54:
 959              	.L100:
1523:Generated_Source\PSoC5/UART.c ****                 }
 960              		.loc 1 1523 0
 961 0032 0849     		ldr	r1, .L117+8
 962              	.L103:
1523:Generated_Source\PSoC5/UART.c ****                 }
 963              		.loc 1 1523 0 is_stmt 0 discriminator 1
 964 0034 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 965              	.LVL55:
1525:Generated_Source\PSoC5/UART.c ****             }
 966              		.loc 1 1525 0 is_stmt 1 discriminator 1
 967 0036 D207     		lsls	r2, r2, #31
 968              	.LVL56:
 969 0038 FCD5     		bpl	.L103
 970 003a F6E7     		b	.L104
 971              	.LVL57:
 972              	.L101:
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 973              		.loc 1 1534 0
 974 003c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 975 003e 044B     		ldr	r3, .L117+4
 976 0040 1A70     		strb	r2, [r3]
 977              	.LBE14:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 978              		.loc 1 1547 0
 979 0042 7047     		bx	lr
 980              	.LVL58:
 981              	.L98:
 982              	.LBB15:
1518:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
 983              		.loc 1 1518 0
 984 0044 0128     		cmp	r0, #1
 985 0046 EFE7     		b	.L116
 986              	.L94:
 987 0048 7047     		bx	lr
 988              	.L118:
 989 004a 00BF     		.align	2
 990              	.L117:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 46


 991 004c 00000000 		.word	.LANCHOR0
 992 0050 3C640040 		.word	1073767484
 993 0054 68640040 		.word	1073767528
 994              	.LBE15:
 995              		.cfi_endproc
 996              	.LFE25:
 997              		.size	UART_SendBreak, .-UART_SendBreak
 998              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 999              		.align	1
 1000              		.global	UART_SetTxAddressMode
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	UART_SetTxAddressMode, %function
 1004              	UART_SetTxAddressMode:
 1005              	.LFB26:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1006              		.loc 1 1573 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 1011              	.LVL59:
 1012 0000 7047     		bx	lr
 1013              		.cfi_endproc
 1014              	.LFE26:
 1015              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1016              		.global	UART_initVar
 1017              		.bss
 1018              		.set	.LANCHOR0,. + 0
 1019              		.type	UART_initVar, %object
 1020              		.size	UART_initVar, 1
 1021              	UART_initVar:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 47


 1022 0000 00       		.space	1
 1023              		.type	txPeriod.5122, %object
 1024              		.size	txPeriod.5122, 1
 1025              	txPeriod.5122:
 1026 0001 00       		.space	1
 1027              		.text
 1028              	.Letext0:
 1029              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1030              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1031              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1032              		.section	.debug_info,"",%progbits
 1033              	.Ldebug_info0:
 1034 0000 08060000 		.4byte	0x608
 1035 0004 0400     		.2byte	0x4
 1036 0006 00000000 		.4byte	.Ldebug_abbrev0
 1037 000a 04       		.byte	0x4
 1038 000b 01       		.uleb128 0x1
 1039 000c 83000000 		.4byte	.LASF59
 1040 0010 0C       		.byte	0xc
 1041 0011 13030000 		.4byte	.LASF60
 1042 0015 BE010000 		.4byte	.LASF61
 1043 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1044 001d 00000000 		.4byte	0
 1045 0021 00000000 		.4byte	.Ldebug_line0
 1046 0025 02       		.uleb128 0x2
 1047 0026 01       		.byte	0x1
 1048 0027 06       		.byte	0x6
 1049 0028 77000000 		.4byte	.LASF0
 1050 002c 02       		.uleb128 0x2
 1051 002d 01       		.byte	0x1
 1052 002e 08       		.byte	0x8
 1053 002f 4B030000 		.4byte	.LASF1
 1054 0033 02       		.uleb128 0x2
 1055 0034 02       		.byte	0x2
 1056 0035 05       		.byte	0x5
 1057 0036 6A030000 		.4byte	.LASF2
 1058 003a 02       		.uleb128 0x2
 1059 003b 02       		.byte	0x2
 1060 003c 07       		.byte	0x7
 1061 003d 4D020000 		.4byte	.LASF3
 1062 0041 02       		.uleb128 0x2
 1063 0042 04       		.byte	0x4
 1064 0043 05       		.byte	0x5
 1065 0044 1A010000 		.4byte	.LASF4
 1066 0048 02       		.uleb128 0x2
 1067 0049 04       		.byte	0x4
 1068 004a 07       		.byte	0x7
 1069 004b 11020000 		.4byte	.LASF5
 1070 004f 02       		.uleb128 0x2
 1071 0050 08       		.byte	0x8
 1072 0051 05       		.byte	0x5
 1073 0052 69000000 		.4byte	.LASF6
 1074 0056 02       		.uleb128 0x2
 1075 0057 08       		.byte	0x8
 1076 0058 07       		.byte	0x7
 1077 0059 2F000000 		.4byte	.LASF7
 1078 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 48


 1079 005e 04       		.byte	0x4
 1080 005f 05       		.byte	0x5
 1081 0060 696E7400 		.ascii	"int\000"
 1082 0064 02       		.uleb128 0x2
 1083 0065 04       		.byte	0x4
 1084 0066 07       		.byte	0x7
 1085 0067 91010000 		.4byte	.LASF8
 1086 006b 04       		.uleb128 0x4
 1087 006c 40010000 		.4byte	.LASF9
 1088 0070 02       		.byte	0x2
 1089 0071 E401     		.2byte	0x1e4
 1090 0073 2C000000 		.4byte	0x2c
 1091 0077 04       		.uleb128 0x4
 1092 0078 00000000 		.4byte	.LASF10
 1093 007c 02       		.byte	0x2
 1094 007d E501     		.2byte	0x1e5
 1095 007f 3A000000 		.4byte	0x3a
 1096 0083 02       		.uleb128 0x2
 1097 0084 04       		.byte	0x4
 1098 0085 04       		.byte	0x4
 1099 0086 26040000 		.4byte	.LASF11
 1100 008a 02       		.uleb128 0x2
 1101 008b 08       		.byte	0x8
 1102 008c 04       		.byte	0x4
 1103 008d 5F010000 		.4byte	.LASF12
 1104 0091 04       		.uleb128 0x4
 1105 0092 B7030000 		.4byte	.LASF13
 1106 0096 02       		.byte	0x2
 1107 0097 F501     		.2byte	0x1f5
 1108 0099 9D000000 		.4byte	0x9d
 1109 009d 02       		.uleb128 0x2
 1110 009e 01       		.byte	0x1
 1111 009f 08       		.byte	0x8
 1112 00a0 B2030000 		.4byte	.LASF14
 1113 00a4 04       		.uleb128 0x4
 1114 00a5 46030000 		.4byte	.LASF15
 1115 00a9 02       		.byte	0x2
 1116 00aa 8E02     		.2byte	0x28e
 1117 00ac B0000000 		.4byte	0xb0
 1118 00b0 05       		.uleb128 0x5
 1119 00b1 6B000000 		.4byte	0x6b
 1120 00b5 02       		.uleb128 0x2
 1121 00b6 08       		.byte	0x8
 1122 00b7 04       		.byte	0x4
 1123 00b8 BD020000 		.4byte	.LASF16
 1124 00bc 02       		.uleb128 0x2
 1125 00bd 04       		.byte	0x4
 1126 00be 07       		.byte	0x7
 1127 00bf B4020000 		.4byte	.LASF17
 1128 00c3 06       		.uleb128 0x6
 1129 00c4 30010000 		.4byte	.LASF18
 1130 00c8 01       		.byte	0x1
 1131 00c9 8801     		.2byte	0x188
 1132 00cb 6B000000 		.4byte	0x6b
 1133 00cf 01       		.byte	0x1
 1134 00d0 E1000000 		.4byte	0xe1
 1135 00d4 07       		.uleb128 0x7
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 49


 1136 00d5 8D030000 		.4byte	.LASF20
 1137 00d9 01       		.byte	0x1
 1138 00da 8A01     		.2byte	0x18a
 1139 00dc 6B000000 		.4byte	0x6b
 1140 00e0 00       		.byte	0
 1141 00e1 06       		.uleb128 0x6
 1142 00e2 A0030000 		.4byte	.LASF19
 1143 00e6 01       		.byte	0x1
 1144 00e7 E501     		.2byte	0x1e5
 1145 00e9 6B000000 		.4byte	0x6b
 1146 00ed 01       		.byte	0x1
 1147 00ee FF000000 		.4byte	0xff
 1148 00f2 07       		.uleb128 0x7
 1149 00f3 15040000 		.4byte	.LASF21
 1150 00f7 01       		.byte	0x1
 1151 00f8 E701     		.2byte	0x1e7
 1152 00fa 6B000000 		.4byte	0x6b
 1153 00fe 00       		.byte	0
 1154 00ff 08       		.uleb128 0x8
 1155 0100 72010000 		.4byte	.LASF62
 1156 0104 01       		.byte	0x1
 1157 0105 6A       		.byte	0x6a
 1158 0106 00000000 		.4byte	.LFB1
 1159 010a 24000000 		.4byte	.LFE1-.LFB1
 1160 010e 01       		.uleb128 0x1
 1161 010f 9C       		.byte	0x9c
 1162 0110 09       		.uleb128 0x9
 1163 0111 94030000 		.4byte	.LASF22
 1164 0115 01       		.byte	0x1
 1165 0116 B7       		.byte	0xb7
 1166 0117 00000000 		.4byte	.LFB2
 1167 011b 3C000000 		.4byte	.LFE2-.LFB2
 1168 011f 01       		.uleb128 0x1
 1169 0120 9C       		.byte	0x9c
 1170 0121 50010000 		.4byte	0x150
 1171 0125 0A       		.uleb128 0xa
 1172 0126 E2030000 		.4byte	.LASF25
 1173 012a 01       		.byte	0x1
 1174 012b B9       		.byte	0xb9
 1175 012c 6B000000 		.4byte	0x6b
 1176 0130 00000000 		.4byte	.LLST0
 1177 0134 0B       		.uleb128 0xb
 1178 0135 06000000 		.4byte	.LVL0
 1179 0139 DF050000 		.4byte	0x5df
 1180 013d 0B       		.uleb128 0xb
 1181 013e 2E000000 		.4byte	.LVL2
 1182 0142 EA050000 		.4byte	0x5ea
 1183 0146 0C       		.uleb128 0xc
 1184 0147 38000000 		.4byte	.LVL4
 1185 014b F5050000 		.4byte	0x5f5
 1186 014f 00       		.byte	0
 1187 0150 09       		.uleb128 0x9
 1188 0151 46000000 		.4byte	.LASF23
 1189 0155 01       		.byte	0x1
 1190 0156 4C       		.byte	0x4c
 1191 0157 00000000 		.4byte	.LFB0
 1192 015b 1C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 50


 1193 015f 01       		.uleb128 0x1
 1194 0160 9C       		.byte	0x9c
 1195 0161 78010000 		.4byte	0x178
 1196 0165 0B       		.uleb128 0xb
 1197 0166 0C000000 		.4byte	.LVL5
 1198 016a FF000000 		.4byte	0xff
 1199 016e 0C       		.uleb128 0xc
 1200 016f 18000000 		.4byte	.LVL6
 1201 0173 10010000 		.4byte	0x110
 1202 0177 00       		.byte	0
 1203 0178 09       		.uleb128 0x9
 1204 0179 1C040000 		.4byte	.LASF24
 1205 017d 01       		.byte	0x1
 1206 017e F0       		.byte	0xf0
 1207 017f 00000000 		.4byte	.LFB3
 1208 0183 40000000 		.4byte	.LFE3-.LFB3
 1209 0187 01       		.uleb128 0x1
 1210 0188 9C       		.byte	0x9c
 1211 0189 B8010000 		.4byte	0x1b8
 1212 018d 0A       		.uleb128 0xa
 1213 018e E2030000 		.4byte	.LASF25
 1214 0192 01       		.byte	0x1
 1215 0193 F2       		.byte	0xf2
 1216 0194 6B000000 		.4byte	0x6b
 1217 0198 13000000 		.4byte	.LLST1
 1218 019c 0B       		.uleb128 0xb
 1219 019d 06000000 		.4byte	.LVL7
 1220 01a1 DF050000 		.4byte	0x5df
 1221 01a5 0B       		.uleb128 0xb
 1222 01a6 16000000 		.4byte	.LVL9
 1223 01aa 00060000 		.4byte	0x600
 1224 01ae 0C       		.uleb128 0xc
 1225 01af 38000000 		.4byte	.LVL11
 1226 01b3 F5050000 		.4byte	0x5f5
 1227 01b7 00       		.byte	0
 1228 01b8 0D       		.uleb128 0xd
 1229 01b9 46010000 		.4byte	.LASF40
 1230 01bd 01       		.byte	0x1
 1231 01be 2701     		.2byte	0x127
 1232 01c0 6B000000 		.4byte	0x6b
 1233 01c4 00000000 		.4byte	.LFB4
 1234 01c8 04000000 		.4byte	.LFE4-.LFB4
 1235 01cc 01       		.uleb128 0x1
 1236 01cd 9C       		.byte	0x9c
 1237 01ce 0E       		.uleb128 0xe
 1238 01cf BD030000 		.4byte	.LASF26
 1239 01d3 01       		.byte	0x1
 1240 01d4 6701     		.2byte	0x167
 1241 01d6 00000000 		.4byte	.LFB6
 1242 01da 0C000000 		.4byte	.LFE6-.LFB6
 1243 01de 01       		.uleb128 0x1
 1244 01df 9C       		.byte	0x9c
 1245 01e0 F3010000 		.4byte	0x1f3
 1246 01e4 0F       		.uleb128 0xf
 1247 01e5 69020000 		.4byte	.LASF34
 1248 01e9 01       		.byte	0x1
 1249 01ea 6701     		.2byte	0x167
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 51


 1250 01ec 6B000000 		.4byte	0x6b
 1251 01f0 01       		.uleb128 0x1
 1252 01f1 50       		.byte	0x50
 1253 01f2 00       		.byte	0
 1254 01f3 10       		.uleb128 0x10
 1255 01f4 C3000000 		.4byte	0xc3
 1256 01f8 00000000 		.4byte	.LFB7
 1257 01fc 0C000000 		.4byte	.LFE7-.LFB7
 1258 0200 01       		.uleb128 0x1
 1259 0201 9C       		.byte	0x9c
 1260 0202 0E020000 		.4byte	0x20e
 1261 0206 11       		.uleb128 0x11
 1262 0207 D4000000 		.4byte	0xd4
 1263 020b 01       		.uleb128 0x1
 1264 020c 50       		.byte	0x50
 1265 020d 00       		.byte	0
 1266 020e 10       		.uleb128 0x10
 1267 020f E1000000 		.4byte	0xe1
 1268 0213 00000000 		.4byte	.LFB8
 1269 0217 10000000 		.4byte	.LFE8-.LFB8
 1270 021b 01       		.uleb128 0x1
 1271 021c 9C       		.byte	0x9c
 1272 021d 2B020000 		.4byte	0x22b
 1273 0221 12       		.uleb128 0x12
 1274 0222 F2000000 		.4byte	0xf2
 1275 0226 26000000 		.4byte	.LLST2
 1276 022a 00       		.byte	0
 1277 022b 13       		.uleb128 0x13
 1278 022c D5030000 		.4byte	.LASF28
 1279 0230 01       		.byte	0x1
 1280 0231 1402     		.2byte	0x214
 1281 0233 6B000000 		.4byte	0x6b
 1282 0237 00000000 		.4byte	.LFB9
 1283 023b 28000000 		.4byte	.LFE9-.LFB9
 1284 023f 01       		.uleb128 0x1
 1285 0240 9C       		.byte	0x9c
 1286 0241 64020000 		.4byte	0x264
 1287 0245 14       		.uleb128 0x14
 1288 0246 8D030000 		.4byte	.LASF20
 1289 024a 01       		.byte	0x1
 1290 024b 1602     		.2byte	0x216
 1291 024d 6B000000 		.4byte	0x6b
 1292 0251 3E000000 		.4byte	.LLST3
 1293 0255 15       		.uleb128 0x15
 1294 0256 F7020000 		.4byte	.LASF27
 1295 025a 01       		.byte	0x1
 1296 025b 1702     		.2byte	0x217
 1297 025d 6B000000 		.4byte	0x6b
 1298 0261 01       		.uleb128 0x1
 1299 0262 53       		.byte	0x53
 1300 0263 00       		.byte	0
 1301 0264 13       		.uleb128 0x13
 1302 0265 84010000 		.4byte	.LASF29
 1303 0269 01       		.byte	0x1
 1304 026a 7A02     		.2byte	0x27a
 1305 026c 77000000 		.4byte	0x77
 1306 0270 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 52


 1307 0274 1C000000 		.4byte	.LFE10-.LFB10
 1308 0278 01       		.uleb128 0x1
 1309 0279 9C       		.byte	0x9c
 1310 027a BB020000 		.4byte	0x2bb
 1311 027e 16       		.uleb128 0x16
 1312 027f E1000000 		.4byte	0xe1
 1313 0283 00000000 		.4byte	.LBB6
 1314 0287 00000000 		.4byte	.Ldebug_ranges0+0
 1315 028b 01       		.byte	0x1
 1316 028c 8602     		.2byte	0x286
 1317 028e 9E020000 		.4byte	0x29e
 1318 0292 17       		.uleb128 0x17
 1319 0293 00000000 		.4byte	.Ldebug_ranges0+0
 1320 0297 18       		.uleb128 0x18
 1321 0298 F2000000 		.4byte	0xf2
 1322 029c 00       		.byte	0
 1323 029d 00       		.byte	0
 1324 029e 19       		.uleb128 0x19
 1325 029f C3000000 		.4byte	0xc3
 1326 02a3 02000000 		.4byte	.LBB9
 1327 02a7 18000000 		.4byte	.Ldebug_ranges0+0x18
 1328 02ab 01       		.byte	0x1
 1329 02ac 8602     		.2byte	0x286
 1330 02ae 17       		.uleb128 0x17
 1331 02af 18000000 		.4byte	.Ldebug_ranges0+0x18
 1332 02b3 18       		.uleb128 0x18
 1333 02b4 D4000000 		.4byte	0xd4
 1334 02b8 00       		.byte	0
 1335 02b9 00       		.byte	0
 1336 02ba 00       		.byte	0
 1337 02bb 13       		.uleb128 0x13
 1338 02bc 00040000 		.4byte	.LASF30
 1339 02c0 01       		.byte	0x1
 1340 02c1 AB02     		.2byte	0x2ab
 1341 02c3 6B000000 		.4byte	0x6b
 1342 02c7 00000000 		.4byte	.LFB11
 1343 02cb 10000000 		.4byte	.LFE11-.LFB11
 1344 02cf 01       		.uleb128 0x1
 1345 02d0 9C       		.byte	0x9c
 1346 02d1 E6020000 		.4byte	0x2e6
 1347 02d5 14       		.uleb128 0x14
 1348 02d6 48020000 		.4byte	.LASF31
 1349 02da 01       		.byte	0x1
 1350 02db AE02     		.2byte	0x2ae
 1351 02dd 6B000000 		.4byte	0x6b
 1352 02e1 5D000000 		.4byte	.LLST4
 1353 02e5 00       		.byte	0
 1354 02e6 0E       		.uleb128 0xe
 1355 02e7 3B040000 		.4byte	.LASF32
 1356 02eb 01       		.byte	0x1
 1357 02ec F502     		.2byte	0x2f5
 1358 02ee 00000000 		.4byte	.LFB12
 1359 02f2 24000000 		.4byte	.LFE12-.LFB12
 1360 02f6 01       		.uleb128 0x1
 1361 02f7 9C       		.byte	0x9c
 1362 02f8 1F030000 		.4byte	0x31f
 1363 02fc 14       		.uleb128 0x14
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 53


 1364 02fd E2030000 		.4byte	.LASF25
 1365 0301 01       		.byte	0x1
 1366 0302 F702     		.2byte	0x2f7
 1367 0304 6B000000 		.4byte	0x6b
 1368 0308 79000000 		.4byte	.LLST5
 1369 030c 0B       		.uleb128 0xb
 1370 030d 06000000 		.4byte	.LVL22
 1371 0311 DF050000 		.4byte	0x5df
 1372 0315 0C       		.uleb128 0xc
 1373 0316 20000000 		.4byte	.LVL23
 1374 031a F5050000 		.4byte	0x5f5
 1375 031e 00       		.byte	0
 1376 031f 0E       		.uleb128 0xe
 1377 0320 D1020000 		.4byte	.LASF33
 1378 0324 01       		.byte	0x1
 1379 0325 5903     		.2byte	0x359
 1380 0327 00000000 		.4byte	.LFB14
 1381 032b 0C000000 		.4byte	.LFE14-.LFB14
 1382 032f 01       		.uleb128 0x1
 1383 0330 9C       		.byte	0x9c
 1384 0331 44030000 		.4byte	0x344
 1385 0335 0F       		.uleb128 0xf
 1386 0336 C9020000 		.4byte	.LASF35
 1387 033a 01       		.byte	0x1
 1388 033b 5903     		.2byte	0x359
 1389 033d 6B000000 		.4byte	0x6b
 1390 0341 01       		.uleb128 0x1
 1391 0342 50       		.byte	0x50
 1392 0343 00       		.byte	0
 1393 0344 0E       		.uleb128 0xe
 1394 0345 E4020000 		.4byte	.LASF36
 1395 0349 01       		.byte	0x1
 1396 034a 6D03     		.2byte	0x36d
 1397 034c 00000000 		.4byte	.LFB15
 1398 0350 0C000000 		.4byte	.LFE15-.LFB15
 1399 0354 01       		.uleb128 0x1
 1400 0355 9C       		.byte	0x9c
 1401 0356 69030000 		.4byte	0x369
 1402 035a 0F       		.uleb128 0xf
 1403 035b C9020000 		.4byte	.LASF35
 1404 035f 01       		.byte	0x1
 1405 0360 6D03     		.2byte	0x36d
 1406 0362 6B000000 		.4byte	0x6b
 1407 0366 01       		.uleb128 0x1
 1408 0367 50       		.byte	0x50
 1409 0368 00       		.byte	0
 1410 0369 0E       		.uleb128 0xe
 1411 036a 51000000 		.4byte	.LASF37
 1412 036e 01       		.byte	0x1
 1413 036f 8C03     		.2byte	0x38c
 1414 0371 00000000 		.4byte	.LFB16
 1415 0375 0C000000 		.4byte	.LFE16-.LFB16
 1416 0379 01       		.uleb128 0x1
 1417 037a 9C       		.byte	0x9c
 1418 037b 8E030000 		.4byte	0x38e
 1419 037f 0F       		.uleb128 0xf
 1420 0380 69020000 		.4byte	.LASF34
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 54


 1421 0384 01       		.byte	0x1
 1422 0385 8C03     		.2byte	0x38c
 1423 0387 6B000000 		.4byte	0x6b
 1424 038b 01       		.uleb128 0x1
 1425 038c 50       		.byte	0x50
 1426 038d 00       		.byte	0
 1427 038e 0E       		.uleb128 0xe
 1428 038f 59030000 		.4byte	.LASF38
 1429 0393 01       		.byte	0x1
 1430 0394 AE03     		.2byte	0x3ae
 1431 0396 00000000 		.4byte	.LFB17
 1432 039a 14000000 		.4byte	.LFE17-.LFB17
 1433 039e 01       		.uleb128 0x1
 1434 039f 9C       		.byte	0x9c
 1435 03a0 B3030000 		.4byte	0x3b3
 1436 03a4 0F       		.uleb128 0xf
 1437 03a5 1D000000 		.4byte	.LASF39
 1438 03a9 01       		.byte	0x1
 1439 03aa AE03     		.2byte	0x3ae
 1440 03ac 6B000000 		.4byte	0x6b
 1441 03b0 01       		.uleb128 0x1
 1442 03b1 50       		.byte	0x50
 1443 03b2 00       		.byte	0
 1444 03b3 0D       		.uleb128 0xd
 1445 03b4 86020000 		.4byte	.LASF41
 1446 03b8 01       		.byte	0x1
 1447 03b9 EB03     		.2byte	0x3eb
 1448 03bb 6B000000 		.4byte	0x6b
 1449 03bf 00000000 		.4byte	.LFB18
 1450 03c3 0C000000 		.4byte	.LFE18-.LFB18
 1451 03c7 01       		.uleb128 0x1
 1452 03c8 9C       		.byte	0x9c
 1453 03c9 0E       		.uleb128 0xe
 1454 03ca 23010000 		.4byte	.LASF42
 1455 03ce 01       		.byte	0x1
 1456 03cf 1104     		.2byte	0x411
 1457 03d1 00000000 		.4byte	.LFB19
 1458 03d5 18000000 		.4byte	.LFE19-.LFB19
 1459 03d9 01       		.uleb128 0x1
 1460 03da 9C       		.byte	0x9c
 1461 03db EE030000 		.4byte	0x3ee
 1462 03df 0F       		.uleb128 0xf
 1463 03e0 1D000000 		.4byte	.LASF39
 1464 03e4 01       		.byte	0x1
 1465 03e5 1104     		.2byte	0x411
 1466 03e7 6B000000 		.4byte	0x6b
 1467 03eb 01       		.uleb128 0x1
 1468 03ec 50       		.byte	0x50
 1469 03ed 00       		.byte	0
 1470 03ee 0E       		.uleb128 0xe
 1471 03ef 2C040000 		.4byte	.LASF43
 1472 03f3 01       		.byte	0x1
 1473 03f4 7904     		.2byte	0x479
 1474 03f6 00000000 		.4byte	.LFB20
 1475 03fa 20000000 		.4byte	.LFE20-.LFB20
 1476 03fe 01       		.uleb128 0x1
 1477 03ff 9C       		.byte	0x9c
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 55


 1478 0400 2E040000 		.4byte	0x42e
 1479 0404 1A       		.uleb128 0x1a
 1480 0405 28000000 		.4byte	.LASF44
 1481 0409 01       		.byte	0x1
 1482 040a 7904     		.2byte	0x479
 1483 040c 2E040000 		.4byte	0x42e
 1484 0410 8C000000 		.4byte	.LLST6
 1485 0414 14       		.uleb128 0x14
 1486 0415 60020000 		.4byte	.LASF45
 1487 0419 01       		.byte	0x1
 1488 041a 7B04     		.2byte	0x47b
 1489 041c 77000000 		.4byte	0x77
 1490 0420 B8000000 		.4byte	.LLST7
 1491 0424 0B       		.uleb128 0xb
 1492 0425 18000000 		.4byte	.LVL32
 1493 0429 C9030000 		.4byte	0x3c9
 1494 042d 00       		.byte	0
 1495 042e 1B       		.uleb128 0x1b
 1496 042f 04       		.byte	0x4
 1497 0430 34040000 		.4byte	0x434
 1498 0434 1C       		.uleb128 0x1c
 1499 0435 91000000 		.4byte	0x91
 1500 0439 0E       		.uleb128 0xe
 1501 043a 23020000 		.4byte	.LASF46
 1502 043e 01       		.byte	0x1
 1503 043f A704     		.2byte	0x4a7
 1504 0441 00000000 		.4byte	.LFB21
 1505 0445 24000000 		.4byte	.LFE21-.LFB21
 1506 0449 01       		.uleb128 0x1
 1507 044a 9C       		.byte	0x9c
 1508 044b 89040000 		.4byte	0x489
 1509 044f 1A       		.uleb128 0x1a
 1510 0450 28000000 		.4byte	.LASF44
 1511 0454 01       		.byte	0x1
 1512 0455 A704     		.2byte	0x4a7
 1513 0457 89040000 		.4byte	0x489
 1514 045b ED000000 		.4byte	.LLST8
 1515 045f 1A       		.uleb128 0x1a
 1516 0460 83030000 		.4byte	.LASF47
 1517 0464 01       		.byte	0x1
 1518 0465 A704     		.2byte	0x4a7
 1519 0467 6B000000 		.4byte	0x6b
 1520 046b 0E010000 		.4byte	.LLST9
 1521 046f 14       		.uleb128 0x14
 1522 0470 60020000 		.4byte	.LASF45
 1523 0474 01       		.byte	0x1
 1524 0475 AA04     		.2byte	0x4aa
 1525 0477 6B000000 		.4byte	0x6b
 1526 047b 2F010000 		.4byte	.LLST10
 1527 047f 0B       		.uleb128 0xb
 1528 0480 1A000000 		.4byte	.LVL39
 1529 0484 C9030000 		.4byte	0x3c9
 1530 0488 00       		.byte	0
 1531 0489 1B       		.uleb128 0x1b
 1532 048a 04       		.byte	0x4
 1533 048b 8F040000 		.4byte	0x48f
 1534 048f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 56


 1535 0490 6B000000 		.4byte	0x6b
 1536 0494 0E       		.uleb128 0xe
 1537 0495 B1010000 		.4byte	.LASF48
 1538 0499 01       		.byte	0x1
 1539 049a CE04     		.2byte	0x4ce
 1540 049c 00000000 		.4byte	.LFB22
 1541 04a0 24000000 		.4byte	.LFE22-.LFB22
 1542 04a4 01       		.uleb128 0x1
 1543 04a5 9C       		.byte	0x9c
 1544 04a6 E6040000 		.4byte	0x4e6
 1545 04aa 1A       		.uleb128 0x1a
 1546 04ab 1D000000 		.4byte	.LASF39
 1547 04af 01       		.byte	0x1
 1548 04b0 CE04     		.2byte	0x4ce
 1549 04b2 6B000000 		.4byte	0x6b
 1550 04b6 69010000 		.4byte	.LLST11
 1551 04ba 0B       		.uleb128 0xb
 1552 04bb 0C000000 		.4byte	.LVL42
 1553 04bf C9030000 		.4byte	0x3c9
 1554 04c3 1D       		.uleb128 0x1d
 1555 04c4 12000000 		.4byte	.LVL43
 1556 04c8 C9030000 		.4byte	0x3c9
 1557 04cc D6040000 		.4byte	0x4d6
 1558 04d0 1E       		.uleb128 0x1e
 1559 04d1 01       		.uleb128 0x1
 1560 04d2 50       		.byte	0x50
 1561 04d3 01       		.uleb128 0x1
 1562 04d4 3D       		.byte	0x3d
 1563 04d5 00       		.byte	0
 1564 04d6 1F       		.uleb128 0x1f
 1565 04d7 1C000000 		.4byte	.LVL44
 1566 04db C9030000 		.4byte	0x3c9
 1567 04df 1E       		.uleb128 0x1e
 1568 04e0 01       		.uleb128 0x1
 1569 04e1 50       		.byte	0x50
 1570 04e2 01       		.uleb128 0x1
 1571 04e3 3A       		.byte	0x3a
 1572 04e4 00       		.byte	0
 1573 04e5 00       		.byte	0
 1574 04e6 13       		.uleb128 0x13
 1575 04e7 31030000 		.4byte	.LASF49
 1576 04eb 01       		.byte	0x1
 1577 04ec F904     		.2byte	0x4f9
 1578 04ee 6B000000 		.4byte	0x6b
 1579 04f2 00000000 		.4byte	.LFB23
 1580 04f6 1C000000 		.4byte	.LFE23-.LFB23
 1581 04fa 01       		.uleb128 0x1
 1582 04fb 9C       		.byte	0x9c
 1583 04fc 11050000 		.4byte	0x511
 1584 0500 14       		.uleb128 0x14
 1585 0501 48020000 		.4byte	.LASF31
 1586 0505 01       		.byte	0x1
 1587 0506 FC04     		.2byte	0x4fc
 1588 0508 6B000000 		.4byte	0x6b
 1589 050c 95010000 		.4byte	.LLST12
 1590 0510 00       		.byte	0
 1591 0511 0E       		.uleb128 0xe
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 57


 1592 0512 9E010000 		.4byte	.LASF50
 1593 0516 01       		.byte	0x1
 1594 0517 4A05     		.2byte	0x54a
 1595 0519 00000000 		.4byte	.LFB24
 1596 051d 24000000 		.4byte	.LFE24-.LFB24
 1597 0521 01       		.uleb128 0x1
 1598 0522 9C       		.byte	0x9c
 1599 0523 4A050000 		.4byte	0x54a
 1600 0527 14       		.uleb128 0x14
 1601 0528 E2030000 		.4byte	.LASF25
 1602 052c 01       		.byte	0x1
 1603 052d 4C05     		.2byte	0x54c
 1604 052f 6B000000 		.4byte	0x6b
 1605 0533 B3010000 		.4byte	.LLST13
 1606 0537 0B       		.uleb128 0xb
 1607 0538 06000000 		.4byte	.LVL48
 1608 053c DF050000 		.4byte	0x5df
 1609 0540 0C       		.uleb128 0xc
 1610 0541 20000000 		.4byte	.LVL49
 1611 0545 F5050000 		.4byte	0x5f5
 1612 0549 00       		.byte	0
 1613 054a 0E       		.uleb128 0xe
 1614 054b 74030000 		.4byte	.LASF51
 1615 054f 01       		.byte	0x1
 1616 0550 A005     		.2byte	0x5a0
 1617 0552 00000000 		.4byte	.LFB25
 1618 0556 58000000 		.4byte	.LFE25-.LFB25
 1619 055a 01       		.uleb128 0x1
 1620 055b 9C       		.byte	0x9c
 1621 055c 99050000 		.4byte	0x599
 1622 0560 1A       		.uleb128 0x1a
 1623 0561 7C010000 		.4byte	.LASF52
 1624 0565 01       		.byte	0x1
 1625 0566 A005     		.2byte	0x5a0
 1626 0568 6B000000 		.4byte	0x6b
 1627 056c C6010000 		.4byte	.LLST14
 1628 0570 17       		.uleb128 0x17
 1629 0571 30000000 		.4byte	.Ldebug_ranges0+0x30
 1630 0575 14       		.uleb128 0x14
 1631 0576 AC020000 		.4byte	.LASF53
 1632 057a 01       		.byte	0x1
 1633 057b A805     		.2byte	0x5a8
 1634 057d 6B000000 		.4byte	0x6b
 1635 0581 0B020000 		.4byte	.LLST15
 1636 0585 15       		.uleb128 0x15
 1637 0586 11010000 		.4byte	.LASF54
 1638 058a 01       		.byte	0x1
 1639 058b D005     		.2byte	0x5d0
 1640 058d 6B000000 		.4byte	0x6b
 1641 0591 05       		.uleb128 0x5
 1642 0592 03       		.byte	0x3
 1643 0593 01000000 		.4byte	txPeriod.5122
 1644 0597 00       		.byte	0
 1645 0598 00       		.byte	0
 1646 0599 20       		.uleb128 0x20
 1647 059a 70020000 		.4byte	.LASF63
 1648 059e 01       		.byte	0x1
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 58


 1649 059f 2406     		.2byte	0x624
 1650 05a1 01       		.byte	0x1
 1651 05a2 B3050000 		.4byte	0x5b3
 1652 05a6 21       		.uleb128 0x21
 1653 05a7 66010000 		.4byte	.LASF64
 1654 05ab 01       		.byte	0x1
 1655 05ac 2406     		.2byte	0x624
 1656 05ae 6B000000 		.4byte	0x6b
 1657 05b2 00       		.byte	0
 1658 05b3 10       		.uleb128 0x10
 1659 05b4 99050000 		.4byte	0x599
 1660 05b8 00000000 		.4byte	.LFB26
 1661 05bc 02000000 		.4byte	.LFE26-.LFB26
 1662 05c0 01       		.uleb128 0x1
 1663 05c1 9C       		.byte	0x9c
 1664 05c2 CE050000 		.4byte	0x5ce
 1665 05c6 22       		.uleb128 0x22
 1666 05c7 A6050000 		.4byte	0x5a6
 1667 05cb 01       		.uleb128 0x1
 1668 05cc 50       		.byte	0x50
 1669 05cd 00       		.byte	0
 1670 05ce 23       		.uleb128 0x23
 1671 05cf F3030000 		.4byte	.LASF65
 1672 05d3 01       		.byte	0x1
 1673 05d4 1B       		.byte	0x1b
 1674 05d5 6B000000 		.4byte	0x6b
 1675 05d9 05       		.uleb128 0x5
 1676 05da 03       		.byte	0x3
 1677 05db 00000000 		.4byte	UART_initVar
 1678 05df 24       		.uleb128 0x24
 1679 05e0 31020000 		.4byte	.LASF55
 1680 05e4 31020000 		.4byte	.LASF55
 1681 05e8 03       		.byte	0x3
 1682 05e9 7D       		.byte	0x7d
 1683 05ea 24       		.uleb128 0x24
 1684 05eb 98020000 		.4byte	.LASF56
 1685 05ef 98020000 		.4byte	.LASF56
 1686 05f3 04       		.byte	0x4
 1687 05f4 27       		.byte	0x27
 1688 05f5 24       		.uleb128 0x24
 1689 05f6 07000000 		.4byte	.LASF57
 1690 05fa 07000000 		.4byte	.LASF57
 1691 05fe 03       		.byte	0x3
 1692 05ff 7E       		.byte	0x7e
 1693 0600 24       		.uleb128 0x24
 1694 0601 00030000 		.4byte	.LASF58
 1695 0605 00030000 		.4byte	.LASF58
 1696 0609 04       		.byte	0x4
 1697 060a 28       		.byte	0x28
 1698 060b 00       		.byte	0
 1699              		.section	.debug_abbrev,"",%progbits
 1700              	.Ldebug_abbrev0:
 1701 0000 01       		.uleb128 0x1
 1702 0001 11       		.uleb128 0x11
 1703 0002 01       		.byte	0x1
 1704 0003 25       		.uleb128 0x25
 1705 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 59


 1706 0005 13       		.uleb128 0x13
 1707 0006 0B       		.uleb128 0xb
 1708 0007 03       		.uleb128 0x3
 1709 0008 0E       		.uleb128 0xe
 1710 0009 1B       		.uleb128 0x1b
 1711 000a 0E       		.uleb128 0xe
 1712 000b 55       		.uleb128 0x55
 1713 000c 17       		.uleb128 0x17
 1714 000d 11       		.uleb128 0x11
 1715 000e 01       		.uleb128 0x1
 1716 000f 10       		.uleb128 0x10
 1717 0010 17       		.uleb128 0x17
 1718 0011 00       		.byte	0
 1719 0012 00       		.byte	0
 1720 0013 02       		.uleb128 0x2
 1721 0014 24       		.uleb128 0x24
 1722 0015 00       		.byte	0
 1723 0016 0B       		.uleb128 0xb
 1724 0017 0B       		.uleb128 0xb
 1725 0018 3E       		.uleb128 0x3e
 1726 0019 0B       		.uleb128 0xb
 1727 001a 03       		.uleb128 0x3
 1728 001b 0E       		.uleb128 0xe
 1729 001c 00       		.byte	0
 1730 001d 00       		.byte	0
 1731 001e 03       		.uleb128 0x3
 1732 001f 24       		.uleb128 0x24
 1733 0020 00       		.byte	0
 1734 0021 0B       		.uleb128 0xb
 1735 0022 0B       		.uleb128 0xb
 1736 0023 3E       		.uleb128 0x3e
 1737 0024 0B       		.uleb128 0xb
 1738 0025 03       		.uleb128 0x3
 1739 0026 08       		.uleb128 0x8
 1740 0027 00       		.byte	0
 1741 0028 00       		.byte	0
 1742 0029 04       		.uleb128 0x4
 1743 002a 16       		.uleb128 0x16
 1744 002b 00       		.byte	0
 1745 002c 03       		.uleb128 0x3
 1746 002d 0E       		.uleb128 0xe
 1747 002e 3A       		.uleb128 0x3a
 1748 002f 0B       		.uleb128 0xb
 1749 0030 3B       		.uleb128 0x3b
 1750 0031 05       		.uleb128 0x5
 1751 0032 49       		.uleb128 0x49
 1752 0033 13       		.uleb128 0x13
 1753 0034 00       		.byte	0
 1754 0035 00       		.byte	0
 1755 0036 05       		.uleb128 0x5
 1756 0037 35       		.uleb128 0x35
 1757 0038 00       		.byte	0
 1758 0039 49       		.uleb128 0x49
 1759 003a 13       		.uleb128 0x13
 1760 003b 00       		.byte	0
 1761 003c 00       		.byte	0
 1762 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 60


 1763 003e 2E       		.uleb128 0x2e
 1764 003f 01       		.byte	0x1
 1765 0040 3F       		.uleb128 0x3f
 1766 0041 19       		.uleb128 0x19
 1767 0042 03       		.uleb128 0x3
 1768 0043 0E       		.uleb128 0xe
 1769 0044 3A       		.uleb128 0x3a
 1770 0045 0B       		.uleb128 0xb
 1771 0046 3B       		.uleb128 0x3b
 1772 0047 05       		.uleb128 0x5
 1773 0048 27       		.uleb128 0x27
 1774 0049 19       		.uleb128 0x19
 1775 004a 49       		.uleb128 0x49
 1776 004b 13       		.uleb128 0x13
 1777 004c 20       		.uleb128 0x20
 1778 004d 0B       		.uleb128 0xb
 1779 004e 01       		.uleb128 0x1
 1780 004f 13       		.uleb128 0x13
 1781 0050 00       		.byte	0
 1782 0051 00       		.byte	0
 1783 0052 07       		.uleb128 0x7
 1784 0053 34       		.uleb128 0x34
 1785 0054 00       		.byte	0
 1786 0055 03       		.uleb128 0x3
 1787 0056 0E       		.uleb128 0xe
 1788 0057 3A       		.uleb128 0x3a
 1789 0058 0B       		.uleb128 0xb
 1790 0059 3B       		.uleb128 0x3b
 1791 005a 05       		.uleb128 0x5
 1792 005b 49       		.uleb128 0x49
 1793 005c 13       		.uleb128 0x13
 1794 005d 00       		.byte	0
 1795 005e 00       		.byte	0
 1796 005f 08       		.uleb128 0x8
 1797 0060 2E       		.uleb128 0x2e
 1798 0061 00       		.byte	0
 1799 0062 3F       		.uleb128 0x3f
 1800 0063 19       		.uleb128 0x19
 1801 0064 03       		.uleb128 0x3
 1802 0065 0E       		.uleb128 0xe
 1803 0066 3A       		.uleb128 0x3a
 1804 0067 0B       		.uleb128 0xb
 1805 0068 3B       		.uleb128 0x3b
 1806 0069 0B       		.uleb128 0xb
 1807 006a 27       		.uleb128 0x27
 1808 006b 19       		.uleb128 0x19
 1809 006c 11       		.uleb128 0x11
 1810 006d 01       		.uleb128 0x1
 1811 006e 12       		.uleb128 0x12
 1812 006f 06       		.uleb128 0x6
 1813 0070 40       		.uleb128 0x40
 1814 0071 18       		.uleb128 0x18
 1815 0072 9742     		.uleb128 0x2117
 1816 0074 19       		.uleb128 0x19
 1817 0075 00       		.byte	0
 1818 0076 00       		.byte	0
 1819 0077 09       		.uleb128 0x9
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 61


 1820 0078 2E       		.uleb128 0x2e
 1821 0079 01       		.byte	0x1
 1822 007a 3F       		.uleb128 0x3f
 1823 007b 19       		.uleb128 0x19
 1824 007c 03       		.uleb128 0x3
 1825 007d 0E       		.uleb128 0xe
 1826 007e 3A       		.uleb128 0x3a
 1827 007f 0B       		.uleb128 0xb
 1828 0080 3B       		.uleb128 0x3b
 1829 0081 0B       		.uleb128 0xb
 1830 0082 27       		.uleb128 0x27
 1831 0083 19       		.uleb128 0x19
 1832 0084 11       		.uleb128 0x11
 1833 0085 01       		.uleb128 0x1
 1834 0086 12       		.uleb128 0x12
 1835 0087 06       		.uleb128 0x6
 1836 0088 40       		.uleb128 0x40
 1837 0089 18       		.uleb128 0x18
 1838 008a 9742     		.uleb128 0x2117
 1839 008c 19       		.uleb128 0x19
 1840 008d 01       		.uleb128 0x1
 1841 008e 13       		.uleb128 0x13
 1842 008f 00       		.byte	0
 1843 0090 00       		.byte	0
 1844 0091 0A       		.uleb128 0xa
 1845 0092 34       		.uleb128 0x34
 1846 0093 00       		.byte	0
 1847 0094 03       		.uleb128 0x3
 1848 0095 0E       		.uleb128 0xe
 1849 0096 3A       		.uleb128 0x3a
 1850 0097 0B       		.uleb128 0xb
 1851 0098 3B       		.uleb128 0x3b
 1852 0099 0B       		.uleb128 0xb
 1853 009a 49       		.uleb128 0x49
 1854 009b 13       		.uleb128 0x13
 1855 009c 02       		.uleb128 0x2
 1856 009d 17       		.uleb128 0x17
 1857 009e 00       		.byte	0
 1858 009f 00       		.byte	0
 1859 00a0 0B       		.uleb128 0xb
 1860 00a1 898201   		.uleb128 0x4109
 1861 00a4 00       		.byte	0
 1862 00a5 11       		.uleb128 0x11
 1863 00a6 01       		.uleb128 0x1
 1864 00a7 31       		.uleb128 0x31
 1865 00a8 13       		.uleb128 0x13
 1866 00a9 00       		.byte	0
 1867 00aa 00       		.byte	0
 1868 00ab 0C       		.uleb128 0xc
 1869 00ac 898201   		.uleb128 0x4109
 1870 00af 00       		.byte	0
 1871 00b0 11       		.uleb128 0x11
 1872 00b1 01       		.uleb128 0x1
 1873 00b2 9542     		.uleb128 0x2115
 1874 00b4 19       		.uleb128 0x19
 1875 00b5 31       		.uleb128 0x31
 1876 00b6 13       		.uleb128 0x13
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 62


 1877 00b7 00       		.byte	0
 1878 00b8 00       		.byte	0
 1879 00b9 0D       		.uleb128 0xd
 1880 00ba 2E       		.uleb128 0x2e
 1881 00bb 00       		.byte	0
 1882 00bc 3F       		.uleb128 0x3f
 1883 00bd 19       		.uleb128 0x19
 1884 00be 03       		.uleb128 0x3
 1885 00bf 0E       		.uleb128 0xe
 1886 00c0 3A       		.uleb128 0x3a
 1887 00c1 0B       		.uleb128 0xb
 1888 00c2 3B       		.uleb128 0x3b
 1889 00c3 05       		.uleb128 0x5
 1890 00c4 27       		.uleb128 0x27
 1891 00c5 19       		.uleb128 0x19
 1892 00c6 49       		.uleb128 0x49
 1893 00c7 13       		.uleb128 0x13
 1894 00c8 11       		.uleb128 0x11
 1895 00c9 01       		.uleb128 0x1
 1896 00ca 12       		.uleb128 0x12
 1897 00cb 06       		.uleb128 0x6
 1898 00cc 40       		.uleb128 0x40
 1899 00cd 18       		.uleb128 0x18
 1900 00ce 9742     		.uleb128 0x2117
 1901 00d0 19       		.uleb128 0x19
 1902 00d1 00       		.byte	0
 1903 00d2 00       		.byte	0
 1904 00d3 0E       		.uleb128 0xe
 1905 00d4 2E       		.uleb128 0x2e
 1906 00d5 01       		.byte	0x1
 1907 00d6 3F       		.uleb128 0x3f
 1908 00d7 19       		.uleb128 0x19
 1909 00d8 03       		.uleb128 0x3
 1910 00d9 0E       		.uleb128 0xe
 1911 00da 3A       		.uleb128 0x3a
 1912 00db 0B       		.uleb128 0xb
 1913 00dc 3B       		.uleb128 0x3b
 1914 00dd 05       		.uleb128 0x5
 1915 00de 27       		.uleb128 0x27
 1916 00df 19       		.uleb128 0x19
 1917 00e0 11       		.uleb128 0x11
 1918 00e1 01       		.uleb128 0x1
 1919 00e2 12       		.uleb128 0x12
 1920 00e3 06       		.uleb128 0x6
 1921 00e4 40       		.uleb128 0x40
 1922 00e5 18       		.uleb128 0x18
 1923 00e6 9742     		.uleb128 0x2117
 1924 00e8 19       		.uleb128 0x19
 1925 00e9 01       		.uleb128 0x1
 1926 00ea 13       		.uleb128 0x13
 1927 00eb 00       		.byte	0
 1928 00ec 00       		.byte	0
 1929 00ed 0F       		.uleb128 0xf
 1930 00ee 05       		.uleb128 0x5
 1931 00ef 00       		.byte	0
 1932 00f0 03       		.uleb128 0x3
 1933 00f1 0E       		.uleb128 0xe
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 63


 1934 00f2 3A       		.uleb128 0x3a
 1935 00f3 0B       		.uleb128 0xb
 1936 00f4 3B       		.uleb128 0x3b
 1937 00f5 05       		.uleb128 0x5
 1938 00f6 49       		.uleb128 0x49
 1939 00f7 13       		.uleb128 0x13
 1940 00f8 02       		.uleb128 0x2
 1941 00f9 18       		.uleb128 0x18
 1942 00fa 00       		.byte	0
 1943 00fb 00       		.byte	0
 1944 00fc 10       		.uleb128 0x10
 1945 00fd 2E       		.uleb128 0x2e
 1946 00fe 01       		.byte	0x1
 1947 00ff 31       		.uleb128 0x31
 1948 0100 13       		.uleb128 0x13
 1949 0101 11       		.uleb128 0x11
 1950 0102 01       		.uleb128 0x1
 1951 0103 12       		.uleb128 0x12
 1952 0104 06       		.uleb128 0x6
 1953 0105 40       		.uleb128 0x40
 1954 0106 18       		.uleb128 0x18
 1955 0107 9742     		.uleb128 0x2117
 1956 0109 19       		.uleb128 0x19
 1957 010a 01       		.uleb128 0x1
 1958 010b 13       		.uleb128 0x13
 1959 010c 00       		.byte	0
 1960 010d 00       		.byte	0
 1961 010e 11       		.uleb128 0x11
 1962 010f 34       		.uleb128 0x34
 1963 0110 00       		.byte	0
 1964 0111 31       		.uleb128 0x31
 1965 0112 13       		.uleb128 0x13
 1966 0113 02       		.uleb128 0x2
 1967 0114 18       		.uleb128 0x18
 1968 0115 00       		.byte	0
 1969 0116 00       		.byte	0
 1970 0117 12       		.uleb128 0x12
 1971 0118 34       		.uleb128 0x34
 1972 0119 00       		.byte	0
 1973 011a 31       		.uleb128 0x31
 1974 011b 13       		.uleb128 0x13
 1975 011c 02       		.uleb128 0x2
 1976 011d 17       		.uleb128 0x17
 1977 011e 00       		.byte	0
 1978 011f 00       		.byte	0
 1979 0120 13       		.uleb128 0x13
 1980 0121 2E       		.uleb128 0x2e
 1981 0122 01       		.byte	0x1
 1982 0123 3F       		.uleb128 0x3f
 1983 0124 19       		.uleb128 0x19
 1984 0125 03       		.uleb128 0x3
 1985 0126 0E       		.uleb128 0xe
 1986 0127 3A       		.uleb128 0x3a
 1987 0128 0B       		.uleb128 0xb
 1988 0129 3B       		.uleb128 0x3b
 1989 012a 05       		.uleb128 0x5
 1990 012b 27       		.uleb128 0x27
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 64


 1991 012c 19       		.uleb128 0x19
 1992 012d 49       		.uleb128 0x49
 1993 012e 13       		.uleb128 0x13
 1994 012f 11       		.uleb128 0x11
 1995 0130 01       		.uleb128 0x1
 1996 0131 12       		.uleb128 0x12
 1997 0132 06       		.uleb128 0x6
 1998 0133 40       		.uleb128 0x40
 1999 0134 18       		.uleb128 0x18
 2000 0135 9742     		.uleb128 0x2117
 2001 0137 19       		.uleb128 0x19
 2002 0138 01       		.uleb128 0x1
 2003 0139 13       		.uleb128 0x13
 2004 013a 00       		.byte	0
 2005 013b 00       		.byte	0
 2006 013c 14       		.uleb128 0x14
 2007 013d 34       		.uleb128 0x34
 2008 013e 00       		.byte	0
 2009 013f 03       		.uleb128 0x3
 2010 0140 0E       		.uleb128 0xe
 2011 0141 3A       		.uleb128 0x3a
 2012 0142 0B       		.uleb128 0xb
 2013 0143 3B       		.uleb128 0x3b
 2014 0144 05       		.uleb128 0x5
 2015 0145 49       		.uleb128 0x49
 2016 0146 13       		.uleb128 0x13
 2017 0147 02       		.uleb128 0x2
 2018 0148 17       		.uleb128 0x17
 2019 0149 00       		.byte	0
 2020 014a 00       		.byte	0
 2021 014b 15       		.uleb128 0x15
 2022 014c 34       		.uleb128 0x34
 2023 014d 00       		.byte	0
 2024 014e 03       		.uleb128 0x3
 2025 014f 0E       		.uleb128 0xe
 2026 0150 3A       		.uleb128 0x3a
 2027 0151 0B       		.uleb128 0xb
 2028 0152 3B       		.uleb128 0x3b
 2029 0153 05       		.uleb128 0x5
 2030 0154 49       		.uleb128 0x49
 2031 0155 13       		.uleb128 0x13
 2032 0156 02       		.uleb128 0x2
 2033 0157 18       		.uleb128 0x18
 2034 0158 00       		.byte	0
 2035 0159 00       		.byte	0
 2036 015a 16       		.uleb128 0x16
 2037 015b 1D       		.uleb128 0x1d
 2038 015c 01       		.byte	0x1
 2039 015d 31       		.uleb128 0x31
 2040 015e 13       		.uleb128 0x13
 2041 015f 52       		.uleb128 0x52
 2042 0160 01       		.uleb128 0x1
 2043 0161 55       		.uleb128 0x55
 2044 0162 17       		.uleb128 0x17
 2045 0163 58       		.uleb128 0x58
 2046 0164 0B       		.uleb128 0xb
 2047 0165 59       		.uleb128 0x59
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 65


 2048 0166 05       		.uleb128 0x5
 2049 0167 01       		.uleb128 0x1
 2050 0168 13       		.uleb128 0x13
 2051 0169 00       		.byte	0
 2052 016a 00       		.byte	0
 2053 016b 17       		.uleb128 0x17
 2054 016c 0B       		.uleb128 0xb
 2055 016d 01       		.byte	0x1
 2056 016e 55       		.uleb128 0x55
 2057 016f 17       		.uleb128 0x17
 2058 0170 00       		.byte	0
 2059 0171 00       		.byte	0
 2060 0172 18       		.uleb128 0x18
 2061 0173 34       		.uleb128 0x34
 2062 0174 00       		.byte	0
 2063 0175 31       		.uleb128 0x31
 2064 0176 13       		.uleb128 0x13
 2065 0177 00       		.byte	0
 2066 0178 00       		.byte	0
 2067 0179 19       		.uleb128 0x19
 2068 017a 1D       		.uleb128 0x1d
 2069 017b 01       		.byte	0x1
 2070 017c 31       		.uleb128 0x31
 2071 017d 13       		.uleb128 0x13
 2072 017e 52       		.uleb128 0x52
 2073 017f 01       		.uleb128 0x1
 2074 0180 55       		.uleb128 0x55
 2075 0181 17       		.uleb128 0x17
 2076 0182 58       		.uleb128 0x58
 2077 0183 0B       		.uleb128 0xb
 2078 0184 59       		.uleb128 0x59
 2079 0185 05       		.uleb128 0x5
 2080 0186 00       		.byte	0
 2081 0187 00       		.byte	0
 2082 0188 1A       		.uleb128 0x1a
 2083 0189 05       		.uleb128 0x5
 2084 018a 00       		.byte	0
 2085 018b 03       		.uleb128 0x3
 2086 018c 0E       		.uleb128 0xe
 2087 018d 3A       		.uleb128 0x3a
 2088 018e 0B       		.uleb128 0xb
 2089 018f 3B       		.uleb128 0x3b
 2090 0190 05       		.uleb128 0x5
 2091 0191 49       		.uleb128 0x49
 2092 0192 13       		.uleb128 0x13
 2093 0193 02       		.uleb128 0x2
 2094 0194 17       		.uleb128 0x17
 2095 0195 00       		.byte	0
 2096 0196 00       		.byte	0
 2097 0197 1B       		.uleb128 0x1b
 2098 0198 0F       		.uleb128 0xf
 2099 0199 00       		.byte	0
 2100 019a 0B       		.uleb128 0xb
 2101 019b 0B       		.uleb128 0xb
 2102 019c 49       		.uleb128 0x49
 2103 019d 13       		.uleb128 0x13
 2104 019e 00       		.byte	0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 66


 2105 019f 00       		.byte	0
 2106 01a0 1C       		.uleb128 0x1c
 2107 01a1 26       		.uleb128 0x26
 2108 01a2 00       		.byte	0
 2109 01a3 49       		.uleb128 0x49
 2110 01a4 13       		.uleb128 0x13
 2111 01a5 00       		.byte	0
 2112 01a6 00       		.byte	0
 2113 01a7 1D       		.uleb128 0x1d
 2114 01a8 898201   		.uleb128 0x4109
 2115 01ab 01       		.byte	0x1
 2116 01ac 11       		.uleb128 0x11
 2117 01ad 01       		.uleb128 0x1
 2118 01ae 31       		.uleb128 0x31
 2119 01af 13       		.uleb128 0x13
 2120 01b0 01       		.uleb128 0x1
 2121 01b1 13       		.uleb128 0x13
 2122 01b2 00       		.byte	0
 2123 01b3 00       		.byte	0
 2124 01b4 1E       		.uleb128 0x1e
 2125 01b5 8A8201   		.uleb128 0x410a
 2126 01b8 00       		.byte	0
 2127 01b9 02       		.uleb128 0x2
 2128 01ba 18       		.uleb128 0x18
 2129 01bb 9142     		.uleb128 0x2111
 2130 01bd 18       		.uleb128 0x18
 2131 01be 00       		.byte	0
 2132 01bf 00       		.byte	0
 2133 01c0 1F       		.uleb128 0x1f
 2134 01c1 898201   		.uleb128 0x4109
 2135 01c4 01       		.byte	0x1
 2136 01c5 11       		.uleb128 0x11
 2137 01c6 01       		.uleb128 0x1
 2138 01c7 9542     		.uleb128 0x2115
 2139 01c9 19       		.uleb128 0x19
 2140 01ca 31       		.uleb128 0x31
 2141 01cb 13       		.uleb128 0x13
 2142 01cc 00       		.byte	0
 2143 01cd 00       		.byte	0
 2144 01ce 20       		.uleb128 0x20
 2145 01cf 2E       		.uleb128 0x2e
 2146 01d0 01       		.byte	0x1
 2147 01d1 3F       		.uleb128 0x3f
 2148 01d2 19       		.uleb128 0x19
 2149 01d3 03       		.uleb128 0x3
 2150 01d4 0E       		.uleb128 0xe
 2151 01d5 3A       		.uleb128 0x3a
 2152 01d6 0B       		.uleb128 0xb
 2153 01d7 3B       		.uleb128 0x3b
 2154 01d8 05       		.uleb128 0x5
 2155 01d9 27       		.uleb128 0x27
 2156 01da 19       		.uleb128 0x19
 2157 01db 20       		.uleb128 0x20
 2158 01dc 0B       		.uleb128 0xb
 2159 01dd 01       		.uleb128 0x1
 2160 01de 13       		.uleb128 0x13
 2161 01df 00       		.byte	0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 67


 2162 01e0 00       		.byte	0
 2163 01e1 21       		.uleb128 0x21
 2164 01e2 05       		.uleb128 0x5
 2165 01e3 00       		.byte	0
 2166 01e4 03       		.uleb128 0x3
 2167 01e5 0E       		.uleb128 0xe
 2168 01e6 3A       		.uleb128 0x3a
 2169 01e7 0B       		.uleb128 0xb
 2170 01e8 3B       		.uleb128 0x3b
 2171 01e9 05       		.uleb128 0x5
 2172 01ea 49       		.uleb128 0x49
 2173 01eb 13       		.uleb128 0x13
 2174 01ec 00       		.byte	0
 2175 01ed 00       		.byte	0
 2176 01ee 22       		.uleb128 0x22
 2177 01ef 05       		.uleb128 0x5
 2178 01f0 00       		.byte	0
 2179 01f1 31       		.uleb128 0x31
 2180 01f2 13       		.uleb128 0x13
 2181 01f3 02       		.uleb128 0x2
 2182 01f4 18       		.uleb128 0x18
 2183 01f5 00       		.byte	0
 2184 01f6 00       		.byte	0
 2185 01f7 23       		.uleb128 0x23
 2186 01f8 34       		.uleb128 0x34
 2187 01f9 00       		.byte	0
 2188 01fa 03       		.uleb128 0x3
 2189 01fb 0E       		.uleb128 0xe
 2190 01fc 3A       		.uleb128 0x3a
 2191 01fd 0B       		.uleb128 0xb
 2192 01fe 3B       		.uleb128 0x3b
 2193 01ff 0B       		.uleb128 0xb
 2194 0200 49       		.uleb128 0x49
 2195 0201 13       		.uleb128 0x13
 2196 0202 3F       		.uleb128 0x3f
 2197 0203 19       		.uleb128 0x19
 2198 0204 02       		.uleb128 0x2
 2199 0205 18       		.uleb128 0x18
 2200 0206 00       		.byte	0
 2201 0207 00       		.byte	0
 2202 0208 24       		.uleb128 0x24
 2203 0209 2E       		.uleb128 0x2e
 2204 020a 00       		.byte	0
 2205 020b 3F       		.uleb128 0x3f
 2206 020c 19       		.uleb128 0x19
 2207 020d 3C       		.uleb128 0x3c
 2208 020e 19       		.uleb128 0x19
 2209 020f 6E       		.uleb128 0x6e
 2210 0210 0E       		.uleb128 0xe
 2211 0211 03       		.uleb128 0x3
 2212 0212 0E       		.uleb128 0xe
 2213 0213 3A       		.uleb128 0x3a
 2214 0214 0B       		.uleb128 0xb
 2215 0215 3B       		.uleb128 0x3b
 2216 0216 0B       		.uleb128 0xb
 2217 0217 00       		.byte	0
 2218 0218 00       		.byte	0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 68


 2219 0219 00       		.byte	0
 2220              		.section	.debug_loc,"",%progbits
 2221              	.Ldebug_loc0:
 2222              	.LLST0:
 2223 0000 08000000 		.4byte	.LVL1
 2224 0004 34000000 		.4byte	.LVL3
 2225 0008 0100     		.2byte	0x1
 2226 000a 54       		.byte	0x54
 2227 000b 00000000 		.4byte	0
 2228 000f 00000000 		.4byte	0
 2229              	.LLST1:
 2230 0013 08000000 		.4byte	.LVL8
 2231 0017 34000000 		.4byte	.LVL10
 2232 001b 0100     		.2byte	0x1
 2233 001d 54       		.byte	0x54
 2234 001e 00000000 		.4byte	0
 2235 0022 00000000 		.4byte	0
 2236              	.LLST2:
 2237 0026 04000000 		.4byte	.LVL14
 2238 002a 08000000 		.4byte	.LVL15
 2239 002e 0600     		.2byte	0x6
 2240 0030 70       		.byte	0x70
 2241 0031 00       		.sleb128 0
 2242 0032 08       		.byte	0x8
 2243 0033 7F       		.byte	0x7f
 2244 0034 1A       		.byte	0x1a
 2245 0035 9F       		.byte	0x9f
 2246 0036 00000000 		.4byte	0
 2247 003a 00000000 		.4byte	0
 2248              	.LLST3:
 2249 003e 00000000 		.4byte	.LVL16
 2250 0042 18000000 		.4byte	.LVL18
 2251 0046 0200     		.2byte	0x2
 2252 0048 30       		.byte	0x30
 2253 0049 9F       		.byte	0x9f
 2254 004a 18000000 		.4byte	.LVL18
 2255 004e 28000000 		.4byte	.LFE9
 2256 0052 0100     		.2byte	0x1
 2257 0054 50       		.byte	0x50
 2258 0055 00000000 		.4byte	0
 2259 0059 00000000 		.4byte	0
 2260              	.LLST4:
 2261 005d 04000000 		.4byte	.LVL20
 2262 0061 08000000 		.4byte	.LVL21
 2263 0065 0A00     		.2byte	0xa
 2264 0067 70       		.byte	0x70
 2265 0068 00       		.sleb128 0
 2266 0069 08       		.byte	0x8
 2267 006a 20       		.byte	0x20
 2268 006b 1A       		.byte	0x1a
 2269 006c 48       		.byte	0x48
 2270 006d 24       		.byte	0x24
 2271 006e 30       		.byte	0x30
 2272 006f 2E       		.byte	0x2e
 2273 0070 9F       		.byte	0x9f
 2274 0071 00000000 		.4byte	0
 2275 0075 00000000 		.4byte	0
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 69


 2276              	.LLST5:
 2277 0079 06000000 		.4byte	.LVL22
 2278 007d 1F000000 		.4byte	.LVL23-1
 2279 0081 0100     		.2byte	0x1
 2280 0083 50       		.byte	0x50
 2281 0084 00000000 		.4byte	0
 2282 0088 00000000 		.4byte	0
 2283              	.LLST6:
 2284 008c 00000000 		.4byte	.LVL29
 2285 0090 0C000000 		.4byte	.LVL30
 2286 0094 0100     		.2byte	0x1
 2287 0096 50       		.byte	0x50
 2288 0097 0C000000 		.4byte	.LVL30
 2289 009b 1C000000 		.4byte	.LVL34
 2290 009f 0100     		.2byte	0x1
 2291 00a1 54       		.byte	0x54
 2292 00a2 1C000000 		.4byte	.LVL34
 2293 00a6 20000000 		.4byte	.LFE20
 2294 00aa 0400     		.2byte	0x4
 2295 00ac F3       		.byte	0xf3
 2296 00ad 01       		.uleb128 0x1
 2297 00ae 50       		.byte	0x50
 2298 00af 9F       		.byte	0x9f
 2299 00b0 00000000 		.4byte	0
 2300 00b4 00000000 		.4byte	0
 2301              	.LLST7:
 2302 00b8 00000000 		.4byte	.LVL29
 2303 00bc 0C000000 		.4byte	.LVL30
 2304 00c0 0200     		.2byte	0x2
 2305 00c2 30       		.byte	0x30
 2306 00c3 9F       		.byte	0x9f
 2307 00c4 0C000000 		.4byte	.LVL30
 2308 00c8 0E000000 		.4byte	.LVL31
 2309 00cc 0100     		.2byte	0x1
 2310 00ce 51       		.byte	0x51
 2311 00cf 0E000000 		.4byte	.LVL31
 2312 00d3 17000000 		.4byte	.LVL32-1
 2313 00d7 0100     		.2byte	0x1
 2314 00d9 53       		.byte	0x53
 2315 00da 18000000 		.4byte	.LVL32
 2316 00de 1A000000 		.4byte	.LVL33
 2317 00e2 0100     		.2byte	0x1
 2318 00e4 51       		.byte	0x51
 2319 00e5 00000000 		.4byte	0
 2320 00e9 00000000 		.4byte	0
 2321              	.LLST8:
 2322 00ed 00000000 		.4byte	.LVL35
 2323 00f1 0E000000 		.4byte	.LVL37
 2324 00f5 0100     		.2byte	0x1
 2325 00f7 50       		.byte	0x50
 2326 00f8 0E000000 		.4byte	.LVL37
 2327 00fc 24000000 		.4byte	.LFE21
 2328 0100 0400     		.2byte	0x4
 2329 0102 F3       		.byte	0xf3
 2330 0103 01       		.uleb128 0x1
 2331 0104 50       		.byte	0x50
 2332 0105 9F       		.byte	0x9f
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 70


 2333 0106 00000000 		.4byte	0
 2334 010a 00000000 		.4byte	0
 2335              	.LLST9:
 2336 010e 00000000 		.4byte	.LVL35
 2337 0112 0A000000 		.4byte	.LVL36
 2338 0116 0100     		.2byte	0x1
 2339 0118 51       		.byte	0x51
 2340 0119 0A000000 		.4byte	.LVL36
 2341 011d 24000000 		.4byte	.LFE21
 2342 0121 0400     		.2byte	0x4
 2343 0123 F3       		.byte	0xf3
 2344 0124 01       		.uleb128 0x1
 2345 0125 51       		.byte	0x51
 2346 0126 9F       		.byte	0x9f
 2347 0127 00000000 		.4byte	0
 2348 012b 00000000 		.4byte	0
 2349              	.LLST10:
 2350 012f 00000000 		.4byte	.LVL35
 2351 0133 0E000000 		.4byte	.LVL37
 2352 0137 0200     		.2byte	0x2
 2353 0139 30       		.byte	0x30
 2354 013a 9F       		.byte	0x9f
 2355 013b 0E000000 		.4byte	.LVL37
 2356 013f 16000000 		.4byte	.LVL38
 2357 0143 0900     		.2byte	0x9
 2358 0145 74       		.byte	0x74
 2359 0146 00       		.sleb128 0
 2360 0147 F3       		.byte	0xf3
 2361 0148 01       		.uleb128 0x1
 2362 0149 50       		.byte	0x50
 2363 014a 31       		.byte	0x31
 2364 014b 1C       		.byte	0x1c
 2365 014c 1C       		.byte	0x1c
 2366 014d 9F       		.byte	0x9f
 2367 014e 1A000000 		.4byte	.LVL39
 2368 0152 1C000000 		.4byte	.LVL40
 2369 0156 0900     		.2byte	0x9
 2370 0158 74       		.byte	0x74
 2371 0159 00       		.sleb128 0
 2372 015a F3       		.byte	0xf3
 2373 015b 01       		.uleb128 0x1
 2374 015c 50       		.byte	0x50
 2375 015d 31       		.byte	0x31
 2376 015e 1C       		.byte	0x1c
 2377 015f 1C       		.byte	0x1c
 2378 0160 9F       		.byte	0x9f
 2379 0161 00000000 		.4byte	0
 2380 0165 00000000 		.4byte	0
 2381              	.LLST11:
 2382 0169 00000000 		.4byte	.LVL41
 2383 016d 0B000000 		.4byte	.LVL42-1
 2384 0171 0100     		.2byte	0x1
 2385 0173 50       		.byte	0x50
 2386 0174 0B000000 		.4byte	.LVL42-1
 2387 0178 1C000000 		.4byte	.LVL44
 2388 017c 0400     		.2byte	0x4
 2389 017e F3       		.byte	0xf3
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 71


 2390 017f 01       		.uleb128 0x1
 2391 0180 50       		.byte	0x50
 2392 0181 9F       		.byte	0x9f
 2393 0182 1C000000 		.4byte	.LVL44
 2394 0186 24000000 		.4byte	.LFE22
 2395 018a 0100     		.2byte	0x1
 2396 018c 50       		.byte	0x50
 2397 018d 00000000 		.4byte	0
 2398 0191 00000000 		.4byte	0
 2399              	.LLST12:
 2400 0195 06000000 		.4byte	.LVL45
 2401 0199 0E000000 		.4byte	.LVL46
 2402 019d 0100     		.2byte	0x1
 2403 019f 50       		.byte	0x50
 2404 01a0 14000000 		.4byte	.LVL47
 2405 01a4 1C000000 		.4byte	.LFE23
 2406 01a8 0100     		.2byte	0x1
 2407 01aa 50       		.byte	0x50
 2408 01ab 00000000 		.4byte	0
 2409 01af 00000000 		.4byte	0
 2410              	.LLST13:
 2411 01b3 06000000 		.4byte	.LVL48
 2412 01b7 1F000000 		.4byte	.LVL49-1
 2413 01bb 0100     		.2byte	0x1
 2414 01bd 50       		.byte	0x50
 2415 01be 00000000 		.4byte	0
 2416 01c2 00000000 		.4byte	0
 2417              	.LLST14:
 2418 01c6 00000000 		.4byte	.LVL50
 2419 01ca 2C000000 		.4byte	.LVL53
 2420 01ce 0100     		.2byte	0x1
 2421 01d0 50       		.byte	0x50
 2422 01d1 2C000000 		.4byte	.LVL53
 2423 01d5 32000000 		.4byte	.LVL54
 2424 01d9 0400     		.2byte	0x4
 2425 01db F3       		.byte	0xf3
 2426 01dc 01       		.uleb128 0x1
 2427 01dd 50       		.byte	0x50
 2428 01de 9F       		.byte	0x9f
 2429 01df 32000000 		.4byte	.LVL54
 2430 01e3 3C000000 		.4byte	.LVL57
 2431 01e7 0100     		.2byte	0x1
 2432 01e9 50       		.byte	0x50
 2433 01ea 3C000000 		.4byte	.LVL57
 2434 01ee 44000000 		.4byte	.LVL58
 2435 01f2 0400     		.2byte	0x4
 2436 01f4 F3       		.byte	0xf3
 2437 01f5 01       		.uleb128 0x1
 2438 01f6 50       		.byte	0x50
 2439 01f7 9F       		.byte	0x9f
 2440 01f8 44000000 		.4byte	.LVL58
 2441 01fc 58000000 		.4byte	.LFE25
 2442 0200 0100     		.2byte	0x1
 2443 0202 50       		.byte	0x50
 2444 0203 00000000 		.4byte	0
 2445 0207 00000000 		.4byte	0
 2446              	.LLST15:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 72


 2447 020b 1E000000 		.4byte	.LVL51
 2448 020f 20000000 		.4byte	.LVL52
 2449 0213 0100     		.2byte	0x1
 2450 0215 52       		.byte	0x52
 2451 0216 36000000 		.4byte	.LVL55
 2452 021a 38000000 		.4byte	.LVL56
 2453 021e 0100     		.2byte	0x1
 2454 0220 52       		.byte	0x52
 2455 0221 00000000 		.4byte	0
 2456 0225 00000000 		.4byte	0
 2457              		.section	.debug_aranges,"",%progbits
 2458 0000 DC000000 		.4byte	0xdc
 2459 0004 0200     		.2byte	0x2
 2460 0006 00000000 		.4byte	.Ldebug_info0
 2461 000a 04       		.byte	0x4
 2462 000b 00       		.byte	0
 2463 000c 0000     		.2byte	0
 2464 000e 0000     		.2byte	0
 2465 0010 00000000 		.4byte	.LFB1
 2466 0014 24000000 		.4byte	.LFE1-.LFB1
 2467 0018 00000000 		.4byte	.LFB2
 2468 001c 3C000000 		.4byte	.LFE2-.LFB2
 2469 0020 00000000 		.4byte	.LFB0
 2470 0024 1C000000 		.4byte	.LFE0-.LFB0
 2471 0028 00000000 		.4byte	.LFB3
 2472 002c 40000000 		.4byte	.LFE3-.LFB3
 2473 0030 00000000 		.4byte	.LFB4
 2474 0034 04000000 		.4byte	.LFE4-.LFB4
 2475 0038 00000000 		.4byte	.LFB6
 2476 003c 0C000000 		.4byte	.LFE6-.LFB6
 2477 0040 00000000 		.4byte	.LFB7
 2478 0044 0C000000 		.4byte	.LFE7-.LFB7
 2479 0048 00000000 		.4byte	.LFB8
 2480 004c 10000000 		.4byte	.LFE8-.LFB8
 2481 0050 00000000 		.4byte	.LFB9
 2482 0054 28000000 		.4byte	.LFE9-.LFB9
 2483 0058 00000000 		.4byte	.LFB10
 2484 005c 1C000000 		.4byte	.LFE10-.LFB10
 2485 0060 00000000 		.4byte	.LFB11
 2486 0064 10000000 		.4byte	.LFE11-.LFB11
 2487 0068 00000000 		.4byte	.LFB12
 2488 006c 24000000 		.4byte	.LFE12-.LFB12
 2489 0070 00000000 		.4byte	.LFB14
 2490 0074 0C000000 		.4byte	.LFE14-.LFB14
 2491 0078 00000000 		.4byte	.LFB15
 2492 007c 0C000000 		.4byte	.LFE15-.LFB15
 2493 0080 00000000 		.4byte	.LFB16
 2494 0084 0C000000 		.4byte	.LFE16-.LFB16
 2495 0088 00000000 		.4byte	.LFB17
 2496 008c 14000000 		.4byte	.LFE17-.LFB17
 2497 0090 00000000 		.4byte	.LFB18
 2498 0094 0C000000 		.4byte	.LFE18-.LFB18
 2499 0098 00000000 		.4byte	.LFB19
 2500 009c 18000000 		.4byte	.LFE19-.LFB19
 2501 00a0 00000000 		.4byte	.LFB20
 2502 00a4 20000000 		.4byte	.LFE20-.LFB20
 2503 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 73


 2504 00ac 24000000 		.4byte	.LFE21-.LFB21
 2505 00b0 00000000 		.4byte	.LFB22
 2506 00b4 24000000 		.4byte	.LFE22-.LFB22
 2507 00b8 00000000 		.4byte	.LFB23
 2508 00bc 1C000000 		.4byte	.LFE23-.LFB23
 2509 00c0 00000000 		.4byte	.LFB24
 2510 00c4 24000000 		.4byte	.LFE24-.LFB24
 2511 00c8 00000000 		.4byte	.LFB25
 2512 00cc 58000000 		.4byte	.LFE25-.LFB25
 2513 00d0 00000000 		.4byte	.LFB26
 2514 00d4 02000000 		.4byte	.LFE26-.LFB26
 2515 00d8 00000000 		.4byte	0
 2516 00dc 00000000 		.4byte	0
 2517              		.section	.debug_ranges,"",%progbits
 2518              	.Ldebug_ranges0:
 2519 0000 00000000 		.4byte	.LBB6
 2520 0004 02000000 		.4byte	.LBE6
 2521 0008 04000000 		.4byte	.LBB12
 2522 000c 06000000 		.4byte	.LBE12
 2523 0010 00000000 		.4byte	0
 2524 0014 00000000 		.4byte	0
 2525 0018 02000000 		.4byte	.LBB9
 2526 001c 04000000 		.4byte	.LBE9
 2527 0020 06000000 		.4byte	.LBB13
 2528 0024 08000000 		.4byte	.LBE13
 2529 0028 00000000 		.4byte	0
 2530 002c 00000000 		.4byte	0
 2531 0030 06000000 		.4byte	.LBB14
 2532 0034 42000000 		.4byte	.LBE14
 2533 0038 44000000 		.4byte	.LBB15
 2534 003c 58000000 		.4byte	.LBE15
 2535 0040 00000000 		.4byte	0
 2536 0044 00000000 		.4byte	0
 2537 0048 00000000 		.4byte	.LFB1
 2538 004c 24000000 		.4byte	.LFE1
 2539 0050 00000000 		.4byte	.LFB2
 2540 0054 3C000000 		.4byte	.LFE2
 2541 0058 00000000 		.4byte	.LFB0
 2542 005c 1C000000 		.4byte	.LFE0
 2543 0060 00000000 		.4byte	.LFB3
 2544 0064 40000000 		.4byte	.LFE3
 2545 0068 00000000 		.4byte	.LFB4
 2546 006c 04000000 		.4byte	.LFE4
 2547 0070 00000000 		.4byte	.LFB6
 2548 0074 0C000000 		.4byte	.LFE6
 2549 0078 00000000 		.4byte	.LFB7
 2550 007c 0C000000 		.4byte	.LFE7
 2551 0080 00000000 		.4byte	.LFB8
 2552 0084 10000000 		.4byte	.LFE8
 2553 0088 00000000 		.4byte	.LFB9
 2554 008c 28000000 		.4byte	.LFE9
 2555 0090 00000000 		.4byte	.LFB10
 2556 0094 1C000000 		.4byte	.LFE10
 2557 0098 00000000 		.4byte	.LFB11
 2558 009c 10000000 		.4byte	.LFE11
 2559 00a0 00000000 		.4byte	.LFB12
 2560 00a4 24000000 		.4byte	.LFE12
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 74


 2561 00a8 00000000 		.4byte	.LFB14
 2562 00ac 0C000000 		.4byte	.LFE14
 2563 00b0 00000000 		.4byte	.LFB15
 2564 00b4 0C000000 		.4byte	.LFE15
 2565 00b8 00000000 		.4byte	.LFB16
 2566 00bc 0C000000 		.4byte	.LFE16
 2567 00c0 00000000 		.4byte	.LFB17
 2568 00c4 14000000 		.4byte	.LFE17
 2569 00c8 00000000 		.4byte	.LFB18
 2570 00cc 0C000000 		.4byte	.LFE18
 2571 00d0 00000000 		.4byte	.LFB19
 2572 00d4 18000000 		.4byte	.LFE19
 2573 00d8 00000000 		.4byte	.LFB20
 2574 00dc 20000000 		.4byte	.LFE20
 2575 00e0 00000000 		.4byte	.LFB21
 2576 00e4 24000000 		.4byte	.LFE21
 2577 00e8 00000000 		.4byte	.LFB22
 2578 00ec 24000000 		.4byte	.LFE22
 2579 00f0 00000000 		.4byte	.LFB23
 2580 00f4 1C000000 		.4byte	.LFE23
 2581 00f8 00000000 		.4byte	.LFB24
 2582 00fc 24000000 		.4byte	.LFE24
 2583 0100 00000000 		.4byte	.LFB25
 2584 0104 58000000 		.4byte	.LFE25
 2585 0108 00000000 		.4byte	.LFB26
 2586 010c 02000000 		.4byte	.LFE26
 2587 0110 00000000 		.4byte	0
 2588 0114 00000000 		.4byte	0
 2589              		.section	.debug_line,"",%progbits
 2590              	.Ldebug_line0:
 2591 0000 C5020000 		.section	.debug_str,"MS",%progbits,1
 2591      02005F00 
 2591      00000201 
 2591      FB0E0D00 
 2591      01010101 
 2592              	.LASF10:
 2593 0000 75696E74 		.ascii	"uint16\000"
 2593      313600
 2594              	.LASF57:
 2595 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2595      69744372 
 2595      69746963 
 2595      616C5365 
 2595      6374696F 
 2596              	.LASF39:
 2597 001d 74784461 		.ascii	"txDataByte\000"
 2597      74614279 
 2597      746500
 2598              	.LASF44:
 2599 0028 73747269 		.ascii	"string\000"
 2599      6E6700
 2600              	.LASF7:
 2601 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2601      206C6F6E 
 2601      6720756E 
 2601      7369676E 
 2601      65642069 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 75


 2602              	.LASF23:
 2603 0046 55415254 		.ascii	"UART_Start\000"
 2603      5F537461 
 2603      727400
 2604              	.LASF37:
 2605 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2605      5F536574 
 2605      5478496E 
 2605      74657272 
 2605      7570744D 
 2606              	.LASF6:
 2607 0069 6C6F6E67 		.ascii	"long long int\000"
 2607      206C6F6E 
 2607      6720696E 
 2607      7400
 2608              	.LASF0:
 2609 0077 7369676E 		.ascii	"signed char\000"
 2609      65642063 
 2609      68617200 
 2610              	.LASF59:
 2611 0083 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2611      43313120 
 2611      352E342E 
 2611      31203230 
 2611      31363036 
 2612 00b6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2612      20726576 
 2612      6973696F 
 2612      6E203233 
 2612      37373135 
 2613 00e9 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2613      66756E63 
 2613      74696F6E 
 2613      2D736563 
 2613      74696F6E 
 2614              	.LASF54:
 2615 0111 74785065 		.ascii	"txPeriod\000"
 2615      72696F64 
 2615      00
 2616              	.LASF4:
 2617 011a 6C6F6E67 		.ascii	"long int\000"
 2617      20696E74 
 2617      00
 2618              	.LASF42:
 2619 0123 55415254 		.ascii	"UART_PutChar\000"
 2619      5F507574 
 2619      43686172 
 2619      00
 2620              	.LASF18:
 2621 0130 55415254 		.ascii	"UART_ReadRxData\000"
 2621      5F526561 
 2621      64527844 
 2621      61746100 
 2622              	.LASF9:
 2623 0140 75696E74 		.ascii	"uint8\000"
 2623      3800
 2624              	.LASF40:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 76


 2625 0146 55415254 		.ascii	"UART_ReadControlRegister\000"
 2625      5F526561 
 2625      64436F6E 
 2625      74726F6C 
 2625      52656769 
 2626              	.LASF12:
 2627 015f 646F7562 		.ascii	"double\000"
 2627      6C6500
 2628              	.LASF64:
 2629 0166 61646472 		.ascii	"addressMode\000"
 2629      6573734D 
 2629      6F646500 
 2630              	.LASF62:
 2631 0172 55415254 		.ascii	"UART_Init\000"
 2631      5F496E69 
 2631      7400
 2632              	.LASF52:
 2633 017c 7265744D 		.ascii	"retMode\000"
 2633      6F646500 
 2634              	.LASF29:
 2635 0184 55415254 		.ascii	"UART_GetByte\000"
 2635      5F476574 
 2635      42797465 
 2635      00
 2636              	.LASF8:
 2637 0191 756E7369 		.ascii	"unsigned int\000"
 2637      676E6564 
 2637      20696E74 
 2637      00
 2638              	.LASF50:
 2639 019e 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2639      5F436C65 
 2639      61725478 
 2639      42756666 
 2639      657200
 2640              	.LASF48:
 2641 01b1 55415254 		.ascii	"UART_PutCRLF\000"
 2641      5F507574 
 2641      43524C46 
 2641      00
 2642              	.LASF61:
 2643 01be 433A5C44 		.ascii	"C:\\Dev\\pdev\\5\\PSOC_customCompDemo-master\\myCus"
 2643      65765C70 
 2643      6465765C 
 2643      355C5053 
 2643      4F435F63 
 2644 01ec 746F6D43 		.ascii	"tomComponent\\myCustomComponent.cydsn\000"
 2644      6F6D706F 
 2644      6E656E74 
 2644      5C6D7943 
 2644      7573746F 
 2645              	.LASF5:
 2646 0211 6C6F6E67 		.ascii	"long unsigned int\000"
 2646      20756E73 
 2646      69676E65 
 2646      6420696E 
 2646      7400
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 77


 2647              	.LASF46:
 2648 0223 55415254 		.ascii	"UART_PutArray\000"
 2648      5F507574 
 2648      41727261 
 2648      7900
 2649              	.LASF55:
 2650 0231 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2650      74657243 
 2650      72697469 
 2650      63616C53 
 2650      65637469 
 2651              	.LASF31:
 2652 0248 73697A65 		.ascii	"size\000"
 2652      00
 2653              	.LASF3:
 2654 024d 73686F72 		.ascii	"short unsigned int\000"
 2654      7420756E 
 2654      7369676E 
 2654      65642069 
 2654      6E7400
 2655              	.LASF45:
 2656 0260 62756649 		.ascii	"bufIndex\000"
 2656      6E646578 
 2656      00
 2657              	.LASF34:
 2658 0269 696E7453 		.ascii	"intSrc\000"
 2658      726300
 2659              	.LASF63:
 2660 0270 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2660      5F536574 
 2660      54784164 
 2660      64726573 
 2660      734D6F64 
 2661              	.LASF41:
 2662 0286 55415254 		.ascii	"UART_ReadTxStatus\000"
 2662      5F526561 
 2662      64547853 
 2662      74617475 
 2662      7300
 2663              	.LASF56:
 2664 0298 55415254 		.ascii	"UART_IntClock_Start\000"
 2664      5F496E74 
 2664      436C6F63 
 2664      6B5F5374 
 2664      61727400 
 2665              	.LASF53:
 2666 02ac 746D7053 		.ascii	"tmpStat\000"
 2666      74617400 
 2667              	.LASF17:
 2668 02b4 73697A65 		.ascii	"sizetype\000"
 2668      74797065 
 2668      00
 2669              	.LASF16:
 2670 02bd 6C6F6E67 		.ascii	"long double\000"
 2670      20646F75 
 2670      626C6500 
 2671              	.LASF35:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 78


 2672 02c9 61646472 		.ascii	"address\000"
 2672      65737300 
 2673              	.LASF33:
 2674 02d1 55415254 		.ascii	"UART_SetRxAddress1\000"
 2674      5F536574 
 2674      52784164 
 2674      64726573 
 2674      733100
 2675              	.LASF36:
 2676 02e4 55415254 		.ascii	"UART_SetRxAddress2\000"
 2676      5F536574 
 2676      52784164 
 2676      64726573 
 2676      733200
 2677              	.LASF27:
 2678 02f7 72785374 		.ascii	"rxStatus\000"
 2678      61747573 
 2678      00
 2679              	.LASF58:
 2680 0300 55415254 		.ascii	"UART_IntClock_Stop\000"
 2680      5F496E74 
 2680      436C6F63 
 2680      6B5F5374 
 2680      6F7000
 2681              	.LASF60:
 2682 0313 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2682      72617465 
 2682      645F536F 
 2682      75726365 
 2682      5C50536F 
 2683              	.LASF49:
 2684 0331 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2684      5F476574 
 2684      54784275 
 2684      66666572 
 2684      53697A65 
 2685              	.LASF15:
 2686 0346 72656738 		.ascii	"reg8\000"
 2686      00
 2687              	.LASF1:
 2688 034b 756E7369 		.ascii	"unsigned char\000"
 2688      676E6564 
 2688      20636861 
 2688      7200
 2689              	.LASF38:
 2690 0359 55415254 		.ascii	"UART_WriteTxData\000"
 2690      5F577269 
 2690      74655478 
 2690      44617461 
 2690      00
 2691              	.LASF2:
 2692 036a 73686F72 		.ascii	"short int\000"
 2692      7420696E 
 2692      7400
 2693              	.LASF51:
 2694 0374 55415254 		.ascii	"UART_SendBreak\000"
 2694      5F53656E 
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 79


 2694      64427265 
 2694      616B00
 2695              	.LASF47:
 2696 0383 62797465 		.ascii	"byteCount\000"
 2696      436F756E 
 2696      7400
 2697              	.LASF20:
 2698 038d 72784461 		.ascii	"rxData\000"
 2698      746100
 2699              	.LASF22:
 2700 0394 55415254 		.ascii	"UART_Enable\000"
 2700      5F456E61 
 2700      626C6500 
 2701              	.LASF19:
 2702 03a0 55415254 		.ascii	"UART_ReadRxStatus\000"
 2702      5F526561 
 2702      64527853 
 2702      74617475 
 2702      7300
 2703              	.LASF14:
 2704 03b2 63686172 		.ascii	"char\000"
 2704      00
 2705              	.LASF13:
 2706 03b7 63686172 		.ascii	"char8\000"
 2706      3800
 2707              	.LASF26:
 2708 03bd 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2708      5F536574 
 2708      5278496E 
 2708      74657272 
 2708      7570744D 
 2709              	.LASF28:
 2710 03d5 55415254 		.ascii	"UART_GetChar\000"
 2710      5F476574 
 2710      43686172 
 2710      00
 2711              	.LASF25:
 2712 03e2 656E6162 		.ascii	"enableInterrupts\000"
 2712      6C65496E 
 2712      74657272 
 2712      75707473 
 2712      00
 2713              	.LASF65:
 2714 03f3 55415254 		.ascii	"UART_initVar\000"
 2714      5F696E69 
 2714      74566172 
 2714      00
 2715              	.LASF30:
 2716 0400 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2716      5F476574 
 2716      52784275 
 2716      66666572 
 2716      53697A65 
 2717              	.LASF21:
 2718 0415 73746174 		.ascii	"status\000"
 2718      757300
 2719              	.LASF24:
ARM GAS  C:\Users\agosdahu\AppData\Local\Temp\ccqrs5e5.s 			page 80


 2720 041c 55415254 		.ascii	"UART_Stop\000"
 2720      5F53746F 
 2720      7000
 2721              	.LASF11:
 2722 0426 666C6F61 		.ascii	"float\000"
 2722      7400
 2723              	.LASF43:
 2724 042c 55415254 		.ascii	"UART_PutString\000"
 2724      5F507574 
 2724      53747269 
 2724      6E6700
 2725              	.LASF32:
 2726 043b 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2726      5F436C65 
 2726      61725278 
 2726      42756666 
 2726      657200
 2727              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
